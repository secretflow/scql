# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023 Ant Group Co., Ltd.
# This file is distributed under the same license as the SCQL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: SCQL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-03 10:11+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../getting_started/quickstart.rst:2
msgid "Quickstart"
msgstr "快速开始"

#: ../../getting_started/quickstart.rst:5
msgid "TL;DR"
msgstr "摘要"

#: ../../getting_started/quickstart.rst:7
msgid ""
"Use ``docker-compose`` to deploy a standalone SCQL, then use scdbclient "
"to query"
msgstr "使用 ``docker-compose`` 来部署一个独立的 SCQL，然后使用 scdbclient 来查询"

#: ../../getting_started/quickstart.rst:11
msgid "Prerequisites"
msgstr "先决条件"

#: ../../getting_started/quickstart.rst:15
msgid "Build scdbclient"
msgstr "构建 scdbclient"

#: ../../getting_started/quickstart.rst:17
msgid ""
"``scdbclient`` is a command-line client for SCDBServer, we would use it "
"to submit queries to SCDBServer and fetch the query results back."
msgstr "``scdbclient`` 是 SCDBServer 的一个命令行客户端，我们将用它来向 SCDBServer 提交查询，并取回查询结果。"

#: ../../getting_started/quickstart.rst:30
msgid "Register user information"
msgstr "注册用户信息"

#: ../../getting_started/quickstart.rst:32
msgid ""
"Before starting the SCQL service, you need to initialize tokens and "
"credentials in ToyGRM and put this information into user.json and "
"engine's config file."
msgstr "在启动 SCQL 服务之前，您需要在 ToyGRM 中初始化令牌和凭证，并将这些信息写入 user.json 和引擎的配置文件中。"

#: ../../getting_started/quickstart.rst:39
msgid ""
"The register.sh script will generate random tokens and replace the "
"``__ALICE_TOKEN__`` and ``__BOB_TOKEN__`` placeholders in `examples"
"/docker-compose/client/users.json "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/client/users.json>`_ and `examples/docker-"
"compose/scdb/conf/toy_grm.json "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/scdb/conf/toy_grm.json>`_ respectively. If your scdbclient and "
"docker compose containers are running on different machines, please make "
"sure to manually replace these tokens to ensure scdbclient get right "
"tokens."
msgstr ""
"register.sh 脚本会用随机的字符串替代 "
"`examples/docker-compose/client/users.json "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/client/users.json>`_ 中的 ``__ALICE_TOKEN__`` 以及 "
"`examples/docker-compose/scdb/conf/toy_grm.json "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/scdb/conf/toy_grm.json>`_ 中的 ``__BOB_TOKEN__``"

#: ../../getting_started/quickstart.rst:42
msgid "Start SCQL Service"
msgstr "启动 SCQL 服务"

#: ../../getting_started/quickstart.rst:44
msgid ""
"You could start SCQL service via `docker-compose "
"<https://github.com/secretflow/scql/tree/main/examples/docker-compose>`_,"
" it would deploy and start services as shown in the following figure, it "
"contains a SCDBServer and two SCQLEngines from party ``alice``, ``bob``."
msgstr ""
"你可以通过 `docker-compose "
"<https://github.com/secretflow/scql/tree/main/examples/docker-compose>`_ "
"来启动 SCQL 服务 ，它将部署和启动服务，如下图所示，它包含一个 SCDBServer 和两个分别来自参与方 ``alice`` 、 "
"``bob`` 的 SCQLEngines 。"

#: ../../getting_started/quickstart.rst:-1
msgid "docker-compose deployment for quickstart example"
msgstr "快速入门示例的 docker-compose 部署"

#: ../../getting_started/quickstart.rst:51
msgid "To demonstrate SCQL, we conducted the following simplified operations:"
msgstr "为了演示 SCQL，我们进行了以下简化操作："

#: ../../getting_started/quickstart.rst:53
msgid ""
"The SCDBServer and two other SCQLEngines use the same database server but"
" are separated by distinct database names."
msgstr "SCDBServer 和另外两个 SCQLEngines 使用同一个数据库服务器，但是使用不同的数据库名称进行区分。"

#: ../../getting_started/quickstart.rst:54
msgid ""
"The SCDBServer is served through the HTTP protocol. However, for "
"production environments, it is recommended to use HTTPS instead. Please "
"check :ref:`TLS Configuration <scdb-tls>` for details."
msgstr ""
"SCDBServer 是通过 HTTP 协议提供服务的。然而，对于生产环境，建议使用 HTTPS 协议来代替。请查看 :ref:`TLS 配置 "
"<scdb-tls>` 以了解详情。"

#: ../../getting_started/quickstart.rst:55
msgid ""
"Please note that while we used ToyGRM for the demo, it should not be used"
" in production environments."
msgstr "请注意，虽然我们在演示中使用了 ToyGRM，但它不应该在生产环境中使用。"

#: ../../getting_started/quickstart.rst:64
msgid ""
"SCDBServer is listening on ``http://localhost:8080``, you could send "
"queries to it via scdbclient."
msgstr "SCDBServer 监听 ``http://localhost:8080`` ，你可以通过 scdbclient 向它发送查询。"

#: ../../getting_started/quickstart.rst:67
msgid ""
"Please checkout `examples/docker-compose/README.md "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/README.md>`_ troubleshooting section for help if you encounter "
"any problems."
msgstr ""
"如果你遇到任何问题，请查看 `examples/docker-compose/README.md "
"<https://github.com/secretflow/scql/tree/main/examples/docker-"
"compose/README.md>`_ 故障排除部分以获得帮助。"

#: ../../getting_started/quickstart.rst:72
msgid "Create database, user and tables"
msgstr "创建数据库、用户和数据表"

#: ../../getting_started/quickstart.rst:155
msgid "Grant CCL"
msgstr "授权 CCL"

#: ../../getting_started/quickstart.rst:206
msgid "Do query"
msgstr "查询"
