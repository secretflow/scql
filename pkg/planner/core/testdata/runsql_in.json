[
  {
    "name": "TestRunSQL",
    "cases": [
      {
        "sql": "select * from alice.tbl_1",
        "skip_projection": true,
        "rewritten_sql": "select tbl_1.aggregate_datetime_0,tbl_1.aggregate_datetime_1,tbl_1.aggregate_datetime_2,tbl_1.aggregate_float_0,tbl_1.aggregate_float_1,tbl_1.aggregate_float_2,tbl_1.aggregate_long_0,tbl_1.aggregate_long_1,tbl_1.aggregate_long_2,tbl_1.aggregate_string_0,tbl_1.aggregate_string_1,tbl_1.aggregate_string_2,tbl_1.aggregate_timestamp_0,tbl_1.aggregate_timestamp_1,tbl_1.aggregate_timestamp_2,tbl_1.compare_datetime_0,tbl_1.compare_datetime_1,tbl_1.compare_datetime_2,tbl_1.compare_float_0,tbl_1.compare_float_1,tbl_1.compare_float_2,tbl_1.compare_long_0,tbl_1.compare_long_1,tbl_1.compare_long_2,tbl_1.compare_string_0,tbl_1.compare_string_1,tbl_1.compare_string_2,tbl_1.compare_timestamp_0,tbl_1.compare_timestamp_1,tbl_1.compare_timestamp_2,tbl_1.encrypt_datetime_0,tbl_1.encrypt_datetime_1,tbl_1.encrypt_datetime_2,tbl_1.encrypt_float_0,tbl_1.encrypt_float_1,tbl_1.encrypt_float_2,tbl_1.encrypt_long_0,tbl_1.encrypt_long_1,tbl_1.encrypt_long_2,tbl_1.encrypt_string_0,tbl_1.encrypt_string_1,tbl_1.encrypt_string_2,tbl_1.encrypt_timestamp_0,tbl_1.encrypt_timestamp_1,tbl_1.encrypt_timestamp_2,tbl_1.groupby_datetime_0,tbl_1.groupby_datetime_1,tbl_1.groupby_datetime_2,tbl_1.groupby_float_0,tbl_1.groupby_float_1,tbl_1.groupby_float_2,tbl_1.groupby_long_0,tbl_1.groupby_long_1,tbl_1.groupby_long_2,tbl_1.groupby_string_0,tbl_1.groupby_string_1,tbl_1.groupby_string_2,tbl_1.groupby_timestamp_0,tbl_1.groupby_timestamp_1,tbl_1.groupby_timestamp_2,tbl_1.join_datetime_0,tbl_1.join_datetime_1,tbl_1.join_datetime_2,tbl_1.join_float_0,tbl_1.join_float_1,tbl_1.join_float_2,tbl_1.join_long_0,tbl_1.join_long_1,tbl_1.join_long_2,tbl_1.join_string_0,tbl_1.join_string_1,tbl_1.join_string_2,tbl_1.join_timestamp_0,tbl_1.join_timestamp_1,tbl_1.join_timestamp_2,tbl_1.plain_datetime_0,tbl_1.plain_datetime_1,tbl_1.plain_datetime_2,tbl_1.plain_float_0,tbl_1.plain_float_1,tbl_1.plain_float_2,tbl_1.plain_long_0,tbl_1.plain_long_1,tbl_1.plain_long_2,tbl_1.plain_string_0,tbl_1.plain_string_1,tbl_1.plain_string_2,tbl_1.plain_timestamp_0,tbl_1.plain_timestamp_1,tbl_1.plain_timestamp_2 from alice.tbl_1"
      },
      {
        "sql": "select * from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.aggregate_datetime_0,tbl_1.aggregate_datetime_1,tbl_1.aggregate_datetime_2,tbl_1.aggregate_float_0,tbl_1.aggregate_float_1,tbl_1.aggregate_float_2,tbl_1.aggregate_long_0,tbl_1.aggregate_long_1,tbl_1.aggregate_long_2,tbl_1.aggregate_string_0,tbl_1.aggregate_string_1,tbl_1.aggregate_string_2,tbl_1.aggregate_timestamp_0,tbl_1.aggregate_timestamp_1,tbl_1.aggregate_timestamp_2,tbl_1.compare_datetime_0,tbl_1.compare_datetime_1,tbl_1.compare_datetime_2,tbl_1.compare_float_0,tbl_1.compare_float_1,tbl_1.compare_float_2,tbl_1.compare_long_0,tbl_1.compare_long_1,tbl_1.compare_long_2,tbl_1.compare_string_0,tbl_1.compare_string_1,tbl_1.compare_string_2,tbl_1.compare_timestamp_0,tbl_1.compare_timestamp_1,tbl_1.compare_timestamp_2,tbl_1.encrypt_datetime_0,tbl_1.encrypt_datetime_1,tbl_1.encrypt_datetime_2,tbl_1.encrypt_float_0,tbl_1.encrypt_float_1,tbl_1.encrypt_float_2,tbl_1.encrypt_long_0,tbl_1.encrypt_long_1,tbl_1.encrypt_long_2,tbl_1.encrypt_string_0,tbl_1.encrypt_string_1,tbl_1.encrypt_string_2,tbl_1.encrypt_timestamp_0,tbl_1.encrypt_timestamp_1,tbl_1.encrypt_timestamp_2,tbl_1.groupby_datetime_0,tbl_1.groupby_datetime_1,tbl_1.groupby_datetime_2,tbl_1.groupby_float_0,tbl_1.groupby_float_1,tbl_1.groupby_float_2,tbl_1.groupby_long_0,tbl_1.groupby_long_1,tbl_1.groupby_long_2,tbl_1.groupby_string_0,tbl_1.groupby_string_1,tbl_1.groupby_string_2,tbl_1.groupby_timestamp_0,tbl_1.groupby_timestamp_1,tbl_1.groupby_timestamp_2,tbl_1.join_datetime_0,tbl_1.join_datetime_1,tbl_1.join_datetime_2,tbl_1.join_float_0,tbl_1.join_float_1,tbl_1.join_float_2,tbl_1.join_long_0,tbl_1.join_long_1,tbl_1.join_long_2,tbl_1.join_string_0,tbl_1.join_string_1,tbl_1.join_string_2,tbl_1.join_timestamp_0,tbl_1.join_timestamp_1,tbl_1.join_timestamp_2,tbl_1.plain_datetime_0,tbl_1.plain_datetime_1,tbl_1.plain_datetime_2,tbl_1.plain_float_0,tbl_1.plain_float_1,tbl_1.plain_float_2,tbl_1.plain_long_0,tbl_1.plain_long_1,tbl_1.plain_long_2,tbl_1.plain_string_0,tbl_1.plain_string_1,tbl_1.plain_string_2,tbl_1.plain_timestamp_0,tbl_1.plain_timestamp_1,tbl_1.plain_timestamp_2 from alice.tbl_1"
      },
      {
        "sql": "select plain_float_0 from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 from alice.tbl_1"
      },
      {
        "sql": "select plain_float_0 from alice.tbl_1 as tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 from alice.tbl_1 as tbl_1"
      },
      {
        "sql": "select plain_float_0, Plain_float_1 from alice.tbl_1 as tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0,tbl_1.plain_float_1 as Plain_float_1 from alice.tbl_1 as tbl_1"
      },
      {
        "sql": "select plain_float_0, Plain_float_1 + plain_float_0 from alice.tbl_1 as tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0,tbl_1.plain_float_1+tbl_1.plain_float_0 as expr_91 from alice.tbl_1 as tbl_1"
      },
      {
        "sql": "select count(*) from (select plain_float_0, Plain_float_1 from alice.tbl_1) as tbl_1 join alice.tbl_2 on tbl_1.Plain_float_1 = tbl_2.plain_float_1",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as expr_181 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_float_1=tbl_2.plain_float_1"
      },
      {
        "sql": "select plain_float_0, plain_float_0 from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0,tbl_1.plain_float_0 from alice.tbl_1"
      },
      {
        "sql": "select fl, fl from (select plain_float_0 as fl, plain_float_0 as fl2 from alice.tbl_1 as alice1) as alice2;",
        "skip_projection": false,
        "rewritten_sql": "select alice1.plain_float_0 as fl,alice1.plain_float_0 as fl from alice.tbl_1 as alice1"
      },
      {
        "sql": "select plain_float_0 as fl from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1"
      },
      {
        "sql": "select plain_float_0 as fl from alice.tbl_1 as alice",
        "skip_projection": false,
        "rewritten_sql": "select alice.plain_float_0 as fl from alice.tbl_1 as alice"
      },
      {
        "sql": "select ifnull(plain_float_0, plain_float_1) as fl from alice.tbl_1 as alice",
        "skip_projection": false,
        "rewritten_sql": "select ifnull(alice.plain_float_0, alice.plain_float_1) as fl from alice.tbl_1 as alice",
        "rewritten_sql_pg": "select coalesce(alice.plain_float_0, alice.plain_float_1) as fl from alice.tbl_1 as alice",
        "rewritten_sql_odps": "select nvl(alice.plain_float_0, alice.plain_float_1) as fl from alice.tbl_1 as alice"
      },
      {
        "sql": "select if(plain_float_0 > 0, plain_float_0, plain_float_1) as fl from alice.tbl_1 as alice",
        "skip_projection": false,
        "rewritten_sql": "select if(alice.plain_float_0>0, alice.plain_float_0, alice.plain_float_1) as fl from alice.tbl_1 as alice",
        "skip_pg_test": true
      },
      {
        "sql": "select plain_float_0 + plain_float_1 as fl from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0+tbl_1.plain_float_1 as fl from alice.tbl_1"
      },
      {
        "sql": "select plain_long_0 % plain_long_0 as fl from alice.tbl_1 where tbl_1.plain_long_0 != 0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0%tbl_1.plain_long_0 as fl from alice.tbl_1 where tbl_1.plain_long_0!=0"
      },
      {
        "sql": "select plain_float_0 + plain_float_1 as fl from alice.tbl_1 where plain_float_0 + plain_float_1 > 0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0+tbl_1.plain_float_1 as fl from alice.tbl_1 where tbl_1.plain_float_0+tbl_1.plain_float_1>0"
      },
      {
        "sql": "select plain_float_0 as fl from alice.tbl_1 where plain_string_0 = '{\"a\":\"b\"}'",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 where tbl_1.plain_string_0='{\"a\":\"b\"}'"
      },
      {
        "sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0"
      },
      {
        "sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0",
        "skip_projection": true,
        "rewritten_sql": "select tbl_1.plain_float_0,tbl_1.plain_long_0,tbl_2.plain_long_0 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0"
      },
      {
        "sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 limit 1,2",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 limit 2 offset 1"
      },
      {
        "sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 order by fl limit 1,2",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_float_0 as fl from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 order by tbl_1.plain_float_0 limit 2 offset 1"
      },
      {
        "sql": "select count(*) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(*) > 3",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>3"
      },
      {
        "sql": "select sum(tbl_1.plain_float_0) as ss, sum(tbl_1.plain_float_0 > 0) as bs from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(*) > 3",
        "skip_projection": false,
        "rewritten_sql": "select sum(tbl_1.plain_float_0) as ss,sum(tbl_1.plain_float_0>0) as bs from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>3",
        "rewritten_sql_odps": "select sum(tbl_1.plain_float_0) as ss,sum(cast(tbl_1.plain_float_0>0 as bigint)) as bs from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>3",
        "skip_odps_test": true
      },
      {
        "sql": "select sum(distinct(tbl_1.compare_float_0)) as ss, count(distinct(tbl_1.compare_float_0)) as ss from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0",
        "skip_projection": false,
        "rewritten_sql": "select sum(distinct tbl_1.compare_float_0) as ss,count(distinct tbl_1.compare_float_0) as ss from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0"
      },
      {
        "sql": "select tbl_1.plain_float_0 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(*) > 0",
        "skip_projection": false,
        "rewritten_sql": "select any_value(tbl_1.plain_float_0) as expr_182 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>0",
        "rewritten_sql_pg": "select tbl_1.plain_float_0 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>0",
        "rewritten_sql_odps": "select tbl_1.plain_float_0 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>0"
      },
      {
        "sql": "select tbl_1.plain_float_0 from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(*) > 0 and sum(tbl_1.plain_float_0) > 100 and tbl_1.plain_float_0 > 3",
        "skip_projection": false,
        "rewritten_sql": "select any_value(t_0.plain_float_0) as expr_183 from (select tbl_1.plain_float_0,tbl_1.plain_long_0 from alice.tbl_1 where tbl_1.plain_float_0>3) as t_0 join alice.tbl_2 on t_0.plain_long_0=tbl_2.plain_long_0 group by t_0.plain_float_0 having (count(1)>0) and (sum(t_0.plain_float_0)>100)",
        "rewritten_sql_pg": "select t_0.plain_float_0 from (select tbl_1.plain_float_0,tbl_1.plain_long_0 from alice.tbl_1 where tbl_1.plain_float_0>3) as t_0 join alice.tbl_2 on t_0.plain_long_0=tbl_2.plain_long_0 group by t_0.plain_float_0 having (count(1)>0) and (sum(t_0.plain_float_0)>100)",
        "rewritten_sql_odps": "select t_0.plain_float_0 from (select tbl_1.plain_float_0,tbl_1.plain_long_0 from alice.tbl_1 where tbl_1.plain_float_0>3) as t_0 join alice.tbl_2 on t_0.plain_long_0=tbl_2.plain_long_0 group by t_0.plain_float_0 having (count(1)>0) and (sum(t_0.plain_float_0)>100)"
      },
      {
        "sql": "select count(*) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0"
      },
      {
        "sql": "select count(*) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0 = tbl_2.plain_long_0 group by tbl_1.plain_float_0 having c > 1",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as c from alice.tbl_1 join alice.tbl_2 on tbl_1.plain_long_0=tbl_2.plain_long_0 group by tbl_1.plain_float_0 having count(1)>1"
      },
      {
        "sql": "select count(distinct (alice.tbl_1.plain_float_0)) as co,sum(distinct (alice.tbl_1.plain_long_0)) as su from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select count(distinct tbl_1.plain_float_0) as co,sum(distinct tbl_1.plain_long_0) as su from alice.tbl_1"
      },
      {
        "sql": "select plain_long_0 from alice.tbl_1 union all select plain_long_0 from alice.tbl_2",
        "skip_projection": false,
        "rewritten_sql": "select t_0.plain_long_0 from ((select tbl_1.plain_long_0 from alice.tbl_1) union all (select tbl_2.plain_long_0 from alice.tbl_2)) as t_0"
      },
      {
        "sql": "select mm from (select plain_long_0 + plain_long_1 as mm from alice.tbl_1 union all select plain_long_0 + plain_long_1 as mm from alice.tbl_2) as tt",
        "skip_projection": false,
        "rewritten_sql": "select tt.expr_183 as mm from ((select tbl_1.plain_long_0+tbl_1.plain_long_1 as expr_183 from alice.tbl_1) union all (select tbl_2.plain_long_0+tbl_2.plain_long_1 as expr_183 from alice.tbl_2)) as tt"
      },
      {
        "sql": "select plain_long_0 as p from alice.tbl_1 union all select plain_long_0 from alice.tbl_2",
        "skip_projection": false,
        "rewritten_sql": "select t_0.plain_long_0 as p from ((select tbl_1.plain_long_0 from alice.tbl_1) union all (select tbl_2.plain_long_0 from alice.tbl_2)) as t_0"
      },
      {
        "sql": "select plain_long_0 as l from alice.tbl_1 union all select plain_long_1 as l from alice.tbl_1 union all select plain_long_2 as l from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select t_0.plain_long_0 as l from ((select tbl_1.plain_long_0 from alice.tbl_1) union all (select tbl_1.plain_long_1 from alice.tbl_1) union all (select tbl_1.plain_long_2 from alice.tbl_1)) as t_0"
      },
      {
        "sql": "select cnt from (select count(*) as cnt from alice.tbl_1 union all select count(*) as cnt from alice.tbl_2 union all select count(*) as cnt from alice.tbl_0) as a",
        "skip_projection": false,
        "rewritten_sql": "select a.expr_274 as cnt from ((select count(1) as expr_274 from alice.tbl_1) union all (select count(1) as expr_274 from alice.tbl_2) union all (select count(1) as expr_274 from alice.tbl_0)) as a"
      },
      {
        "sql": "select tbl_1.plain_long_0, '123' as constStr, 123 as constInt from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0,'123' as constStr,123 as constInt from alice.tbl_1"
      },
      {
        "sql": "select plain_long_0 in (select plain_long_0 from alice.tbl_1) from alice.tbl_0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_0 in (select tbl_1.plain_long_0 from alice.tbl_1) as expr_181 from alice.tbl_0"
      },
      {
        "sql": "select plain_long_1, plain_long_0 not in (select plain_long_0 from alice.tbl_1) as tt from alice.tbl_0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_1,tbl_0.plain_long_0 not in (select tbl_1.plain_long_0 from alice.tbl_1) as tt from alice.tbl_0"
      },
      {
        "sql": "select plain_long_0 from alice.tbl_0 where plain_long_0 in (select plain_long_0 from alice.tbl_1)",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_0 from alice.tbl_0 where tbl_0.plain_long_0 in (select tbl_1.plain_long_0 from alice.tbl_1)"
      },
      {
        "sql": "select plain_long_0 from alice.tbl_0 where (plain_long_0 in (select plain_long_0 from alice.tbl_1)) and plain_long_0 > 0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_0 from alice.tbl_0 where (tbl_0.plain_long_0>0) and (tbl_0.plain_long_0 in (select tbl_1.plain_long_0 from alice.tbl_1))"
      },
      {
        "sql": "select plain_long_0 from alice.tbl_0 where plain_long_0 not in (select plain_long_0 from alice.tbl_1)",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_0 from alice.tbl_0 where tbl_0.plain_long_0 not in (select tbl_1.plain_long_0 from alice.tbl_1)"
      },
      {
        "sql": "select t1.plain_long_0 from alice.tbl_0 as t1 join alice.tbl_1 as t2 on t1.plain_long_0 = t2.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select t1.plain_long_0 from alice.tbl_0 as t1 join alice.tbl_1 as t2 on t1.plain_long_0=t2.plain_long_0"
      },
      {
        "sql": "select alice.tbl_0.plain_long_0 from alice.tbl_0 join alice.tbl_1 on alice.tbl_0.plain_long_0 = alice.tbl_1.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select tbl_0.plain_long_0 from alice.tbl_0 join alice.tbl_1 on tbl_0.plain_long_0=tbl_1.plain_long_0"
      },
      {
        "sql": "select concat(alice.tbl_0.plain_string_0, alice.tbl_0.plain_string_1) as tg, (alice.tbl_0.plain_long_0 + alice.tbl_1.plain_long_0) as tt from alice.tbl_0 join alice.tbl_1 on alice.tbl_0.plain_long_0 = alice.tbl_1.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select concat(tbl_0.plain_string_0, tbl_0.plain_string_1) as tg,tbl_0.plain_long_0+tbl_1.plain_long_0 as tt from alice.tbl_0 join alice.tbl_1 on tbl_0.plain_long_0=tbl_1.plain_long_0"
      },
      {
        "sql": "select concat(alice.tbl_0.plain_string_0, alice.tbl_0.plain_string_1) as tt from alice.tbl_0",
        "skip_projection": false,
        "rewritten_sql": "select concat(tbl_0.plain_string_0, tbl_0.plain_string_1) as tt from alice.tbl_0"
      },
      {
        "sql": "select concat(alice.tbl_0.plain_string_0, alice.tbl_0.plain_string_1) as tt from alice.tbl_0",
        "skip_projection": true,
        "rewritten_sql": "select tbl_0.plain_string_0,tbl_0.plain_string_1 from alice.tbl_0"
      },
      {
        "sql": "select count(*), sum(sumId), max(minId), min(maxId) from (select t.plain_long_0, sum(t.plain_long_1) as sumId, max(t.plain_long_1) as maxId, min(t.plain_long_2) as minId from alice.tbl_0 as t group by t.plain_long_0) as hp",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as expr_94,sum(t_0.expr_91) as expr_95,max(t_0.expr_93) as expr_96,min(t_0.expr_92) as expr_97 from (select sum(t.plain_long_1) as expr_91,max(t.plain_long_1) as expr_92,min(t.plain_long_2) as expr_93,count(1) as expr_98 from alice.tbl_0 as t group by t.plain_long_0) as t_0"
      },
      {
        "sql": "select count(*) from (select encrypt_float_0, encrypt_float_1 from alice.tbl_1 as t union all select encrypt_float_0, encrypt_float_1 from alice.tbl_1 as t1) as tt group by tt.encrypt_float_0",
        "skip_projection": false,
        "rewritten_sql": "select count(tt.expr_184) as expr_183 from ((select count(1) as expr_184,any_value(t.encrypt_float_0) as expr_181 from alice.tbl_1 as t group by t.encrypt_float_0) union all (select count(1) as expr_184,any_value(t1.encrypt_float_0) as expr_181 from alice.tbl_1 as t1 group by t1.encrypt_float_0)) as tt group by tt.expr_181",
        "rewritten_sql_pg": "select count(tt.expr_184) as expr_183 from ((select count(1) as expr_184,t.encrypt_float_0 from alice.tbl_1 as t group by t.encrypt_float_0) union all (select count(1) as expr_184,t1.encrypt_float_0 from alice.tbl_1 as t1 group by t1.encrypt_float_0)) as tt group by tt.encrypt_float_0",
        "rewritten_sql_odps": "select count(tt.expr_184) as expr_183 from ((select count(1) as expr_184,t.encrypt_float_0 from alice.tbl_1 as t group by t.encrypt_float_0) union all (select count(1) as expr_184,t1.encrypt_float_0 from alice.tbl_1 as t1 group by t1.encrypt_float_0)) as tt group by tt.encrypt_float_0"
      },
      {
        "sql": "select min(alice.compare_float_0*alice.compare_float_1) as m from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select min(alice.compare_float_0*alice.compare_float_1) as m from alice.tbl_0 as alice",
        "rewritten_sql_pg": "select min(alice.compare_float_0*alice.compare_float_1) as m from alice.tbl_0 as alice"
      },
      {
        "sql": "select cast(alice.compare_float_0 as decimal(11,2)) as m from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select cast(alice.compare_float_0 as decimal(11, 2)) as m from alice.tbl_0 as alice",
        "rewritten_sql_pg": "select cast(alice.compare_float_0 as numeric(11, 2)) as m from alice.tbl_0 as alice",
        "rewritten_sql_odps": "select cast(alice.compare_float_0 as decimal) as m from alice.tbl_0 as alice"
      },
      {
        "sql": "select cast(alice.compare_string_0 as CHAR(100)) as m from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select cast(alice.compare_string_0 as char(100)) as m from alice.tbl_0 as alice",
        "rewritten_sql_odps": "select cast(alice.compare_string_0 as string) as m from alice.tbl_0 as alice"
      },
      {
        "sql": "select cast(alice.compare_float_0 as double) as m from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select cast(alice.compare_float_0 as decimal(64,30)) as m from alice.tbl_0 as alice",
        "rewritten_sql_pg": "select cast(alice.compare_float_0 as numeric) as m from alice.tbl_0 as alice",
        "rewritten_sql_odps": "select cast(alice.compare_float_0 as double) as m from alice.tbl_0 as alice"
      },
      {
        "sql": "select cast(alice.compare_float_0 as decimal(11)) as m from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select cast(alice.compare_float_0 as decimal(11)) as m from alice.tbl_0 as alice",
        "rewritten_sql_pg": "select cast(alice.compare_float_0 as numeric(11)) as m from alice.tbl_0 as alice",
        "rewritten_sql_odps": "select cast(alice.compare_float_0 as bigint) as m from alice.tbl_0 as alice"
      },
      {
        "sql": "SELECT 'David!' LIKE 'David\\_' as tt from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select 'David!'='David_' as tt from alice.tbl_0 as alice"
      },
      {
        "sql": "SELECT 'David_' LIKE 'David|_' ESCAPE '|' as  tt from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select 'David_'='David_' as tt from alice.tbl_0 as alice"
      },
      {
        "sql": "SELECT alice.plain_string_0 LIKE '%str%' as tt from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select alice.plain_string_0 like '%str%' as tt from alice.tbl_0 as alice"
      },
      {
        "sql": "SELECT (alice.plain_string_0 LIKE '%str%') * 10 as tt1, (alice.plain_string_0 LIKE '%str%') + 10 as tt2, alice.plain_string_0 LIKE '%str%' and alice.plain_string_1 LIKE '%str%' as tt3 from alice.tbl_0 as alice;",
        "skip_projection": false,
        "rewritten_sql": "select (alice.plain_string_0 like '%str%')*10 as tt1,(alice.plain_string_0 like '%str%')+10 as tt2,alice.plain_string_0 like '%str%' and alice.plain_string_1 like '%str%' as tt3 from alice.tbl_0 as alice",
        "skip_odps_test": true
      },
      {
        "sql": "select plain_long_0, 3 + plain_long_1 in (2, 5, 15) as ee from alice.tbl_1 where plain_long_0 in (2, 5, 15) and plain_long_1 not in (2, 5, 15);",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0,3+tbl_1.plain_long_1=2 or 3+tbl_1.plain_long_1=5 or 3+tbl_1.plain_long_1=15 as ee from alice.tbl_1 where (tbl_1.plain_long_0=2 or tbl_1.plain_long_0=5 or tbl_1.plain_long_0=15) and (not(tbl_1.plain_long_1=2 or tbl_1.plain_long_1=5 or tbl_1.plain_long_1=15))"
      },
      {
        "sql": "select plain_long_0 + plain_long_0 + 5, (plain_long_1 + plain_long_2 + plain_long_0) > plain_long_1 and plain_long_1 > plain_long_0 and plain_long_1 < plain_long_0 from alice.tbl_1;",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0+tbl_1.plain_long_0+5 as expr_91,tbl_1.plain_long_1+tbl_1.plain_long_2+tbl_1.plain_long_0>tbl_1.plain_long_1 and tbl_1.plain_long_1>tbl_1.plain_long_0 and tbl_1.plain_long_1<tbl_1.plain_long_0 as expr_92 from alice.tbl_1"
      },
      {
        "sql": "select plain_long_0 > if(plain_long_0, plain_long_1, plain_long_2) as res from alice.tbl_1;",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0>if(tbl_1.plain_long_0, tbl_1.plain_long_1, tbl_1.plain_long_2) as res from alice.tbl_1",
        "skip_odps_test": true
      },
      {
        "sql": "select plain_long_0, plain_long_0 > 1 and plain_long_0 >= 1 as and_log, not (plain_long_0 < 5) as not_log, (plain_long_0 <= 5) or (plain_long_0 <> 8) as or_log from carol.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_long_0,tbl_1.plain_long_0>1 and tbl_1.plain_long_0>=1 as and_log,not(tbl_1.plain_long_0<5) as not_log,tbl_1.plain_long_0<=5 or tbl_1.plain_long_0!=8 as or_log from carol.tbl_1"
      },
      {
        "sql": "select -(plain_long_0 + plain_long_2) * plain_long_1 as res from carol.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select -(tbl_1.plain_long_0+tbl_1.plain_long_2)*tbl_1.plain_long_1 as res from carol.tbl_1"
      },
      {
        "sql": "select cos(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select cos(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select truncate(plain_float_0, 2) as a, truncate(plain_float_0, 0) as b, truncate(3.1415926, 3) as c from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select truncate(tbl_1.plain_float_0, 2) as a,truncate(tbl_1.plain_float_0, 0) as b,truncate(3.1415926, 3) as c from alice.tbl_1",
        "rewritten_sql_pg": "select trunc(tbl_1.plain_float_0, 2) as a,trunc(tbl_1.plain_float_0, 0) as b,trunc(3.1415926, 3) as c from alice.tbl_1",
        "rewritten_sql_odps": "select trunc(tbl_1.plain_float_0, 2) as a,trunc(tbl_1.plain_float_0, 0) as b,trunc(3.1415926, 3) as c from alice.tbl_1"
      },
      {
        "sql": "select abs(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select abs(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select round(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select round(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select log10(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select log10(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select ceil(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select ceil(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select floor(aggregate_float_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select floor(tbl_1.aggregate_float_0) as a from alice.tbl_1"
      },
      {
        "sql": "select length(plain_string_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select length(tbl_1.plain_string_0) as a from alice.tbl_1"
      },
      {
        "sql": "select instr(plain_string_0, 'teststr') as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select instr(tbl_1.plain_string_0, 'teststr') as a from alice.tbl_1"
      },
      {
        "sql": "select plain_datetime_0 < now() as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_datetime_0<now() as a from alice.tbl_1"
      },
      {
        "sql": "select plain_datetime_0 < curdate() as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select tbl_1.plain_datetime_0<curdate() as a from alice.tbl_1",
        "rewritten_sql_pg": "select tbl_1.plain_datetime_0<current_date as a from alice.tbl_1"
      },
      {
        "sql": "select adddate(plain_datetime_0, INTERVAL 30 DAY) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select adddate(tbl_1.plain_datetime_0, interval 30 DAY) as a from alice.tbl_1",
        "rewritten_sql_pg": "select tbl_1.plain_datetime_0+ interval '30 DAY' as a from alice.tbl_1"
      },
      {
        "sql": "select subdate(plain_datetime_0, INTERVAL 30 DAY) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select subdate(tbl_1.plain_datetime_0, interval 30 DAY) as a from alice.tbl_1",
        "rewritten_sql_pg": "select tbl_1.plain_datetime_0- interval '30 DAY' as a from alice.tbl_1"
      },
      {
        "sql": "select datediff(plain_datetime_0, plain_datetime_1) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select datediff(tbl_1.plain_datetime_0, tbl_1.plain_datetime_1) as a from alice.tbl_1",
        "skip_pg_test": true
      },
      {
        "sql": "select last_day(plain_datetime_0) as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select last_day(tbl_1.plain_datetime_0) as a from alice.tbl_1",
        "skip_pg_test": true
      },
      {
        "sql": "select str_to_date('August 10 2017', '%M %d %Y') as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select str_to_date('August 10 2017', '%M %d %Y') as a from alice.tbl_1",
        "skip_pg_test": true
      },
      {
        "sql": "select date_format(plain_datetime_0, '%Y-%m-%d %H:%i:%S') as a from alice.tbl_1",
        "skip_projection": false,
        "rewritten_sql": "select date_format(tbl_1.plain_datetime_0, '%Y-%m-%d %H:%i:%S') as a from alice.tbl_1",
        "skip_pg_test": true
      },
      {
        "sql": "SELECT t_0.b4 FROM  (SELECT tbl_1.plain_string_0 as b4 FROM alice.tbl_1 WHERE tbl_1.plain_string_0 = '123') AS t_0 GROUP BY t_0.b4 HAVING count(1)>=4;",
        "skip_projection": false,
        "rewritten_sql": "select any_value(tbl_1.plain_string_0) as b4 from alice.tbl_1 where tbl_1.plain_string_0='123' group by tbl_1.plain_string_0 having count(1)>=4",
        "rewritten_sql_pg": "select tbl_1.plain_string_0 as b4 from alice.tbl_1 where tbl_1.plain_string_0='123' group by tbl_1.plain_string_0 having count(1)>=4",
        "rewritten_sql_odps": "select tbl_1.plain_string_0 as b4 from alice.tbl_1 where tbl_1.plain_string_0='123' group by tbl_1.plain_string_0 having count(1)>=4"
      },
      {
        "sql": "SELECT CASE WHEN (t_0.b4='1' OR t_0.b4='1' OR t_0.b4='2') THEN '3' ELSE '4' END AS bank_type, count(1) AS expr_24 FROM (SELECT str_to_date(plain_string_0, '%Y-%m-%d') AS p0, plain_string_1 as b4, plain_string_2 as b5 FROM alice.tbl_1 WHERE (str_to_date(plain_string_0, '%Y-%m-%d')=str_to_date('2023-01-10', '%Y-%m-%d'))) AS t_0 GROUP BY t_0.b4 HAVING count(1)>=4;",
        "skip_projection": false,
        "skip_odps_test": true,
        "skip_pg_test": true,
        "rewritten_sql": "select case when (any_value(tbl_1.plain_string_1)='1' or any_value(tbl_1.plain_string_1)='1' or any_value(tbl_1.plain_string_1)='2') then '3' else '4' end as bank_type,count(1) as expr_24 from alice.tbl_1 where str_to_date(tbl_1.plain_string_0, '%Y-%m-%d')=str_to_date('2023-01-10', '%Y-%m-%d') group by tbl_1.plain_string_1 having count(1)>=4"
      },
      {
        "sql": "select count(*) from (select plain_float_0 + plain_float_1 as f1 from alice.tbl_1) as ta join alice.tbl_2 on ta.f1 = tbl_2.plain_float_1",
        "skip_projection": false,
        "rewritten_sql": "select count(1) as expr_182 from (select tbl_1.plain_float_0+tbl_1.plain_float_1 as f1 from alice.tbl_1) as ta join alice.tbl_2 on ta.f1=tbl_2.plain_float_1"
      },
      {
        "sql": "select bank_type, count(1) from (select case when t1.b4 in ('1', '2', '3') then '1' else '2' end as bank_type from (select str_to_date(plain_string_0, '%Y-%m-%d') as partition_date, plain_string_1 as b4, plain_string_2 as b5 from alice.tbl_1) t1 where t1.partition_date = '2022-02-02') tt group by bank_type;",
        "skip_projection": false,
        "skip_odps_test": true,
        "skip_pg_test": true,
        "rewritten_sql": "select any_value(case when (t_0.b4='1' or t_0.b4='2' or t_0.b4='3') then '1' else '2' end) as bank_type,count(1) as expr_93 from (select str_to_date(tbl_1.plain_string_0, '%Y-%m-%d') as partition_date,tbl_1.plain_string_1 as b4 from alice.tbl_1 where str_to_date(tbl_1.plain_string_0, '%Y-%m-%d')='2022-02-02') as t_0 group by case when (t_0.b4='1' or t_0.b4='2' or t_0.b4='3') then '1' else '2' end"
      },
      {
        "sql": "select a.plain_long_0, b.plain_long_0 from alice.tbl_0 a left join (select distinct plain_long_0, plain_long_1 from alice.tbl_1) b on a.plain_long_0 = b.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select a.plain_long_0,b.expr_172 from alice.tbl_0 as a left join (select any_value(tbl_1.plain_long_0) as expr_172 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.expr_172",
        "rewritten_sql_pg": "select a.plain_long_0,b.plain_long_0 from alice.tbl_0 as a left join (select tbl_1.plain_long_0 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.plain_long_0",
        "rewritten_sql_odps": "select a.plain_long_0,b.plain_long_0 from alice.tbl_0 as a left join (select tbl_1.plain_long_0 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.plain_long_0"
      },
      {
        "sql": "select a.plain_long_0 from alice.tbl_0 a left join (select distinct plain_long_0, plain_long_1 from alice.tbl_1) b on a.plain_long_0 = b.plain_long_0",
        "skip_projection": false,
        "rewritten_sql": "select a.plain_long_0 from alice.tbl_0 as a left join (select any_value(tbl_1.plain_long_0) as expr_172 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.expr_172",
        "rewritten_sql_pg": "select a.plain_long_0 from alice.tbl_0 as a left join (select tbl_1.plain_long_0 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.plain_long_0",
        "rewritten_sql_odps": "select a.plain_long_0 from alice.tbl_0 as a left join (select tbl_1.plain_long_0 from alice.tbl_1 group by tbl_1.plain_long_0,tbl_1.plain_long_1) as b on a.plain_long_0=b.plain_long_0"
      }
    ]
  }
]
