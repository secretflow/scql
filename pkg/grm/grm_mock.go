// Code generated by MockGen. DO NOT EDIT.
// Source: grm.go

// Package grm is a generated GoMock package.
package grm

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGrm is a mock of Grm interface
type MockGrm struct {
	ctrl     *gomock.Controller
	recorder *MockGrmMockRecorder
}

// MockGrmMockRecorder is the mock recorder for MockGrm
type MockGrmMockRecorder struct {
	mock *MockGrm
}

// NewMockGrm creates a new mock instance
func NewMockGrm(ctrl *gomock.Controller) *MockGrm {
	mock := &MockGrm{ctrl: ctrl}
	mock.recorder = &MockGrmMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGrm) EXPECT() *MockGrmMockRecorder {
	return m.recorder
}

// GetTableMeta mocks base method
func (m *MockGrm) GetTableMeta(tid, requestParty, token string) (*TableSchema, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTableMeta", tid, requestParty, token)
	ret0, _ := ret[0].(*TableSchema)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTableMeta indicates an expected call of GetTableMeta
func (mr *MockGrmMockRecorder) GetTableMeta(tid, requestParty, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTableMeta", reflect.TypeOf((*MockGrm)(nil).GetTableMeta), tid, requestParty, token)
}

// GetEngines mocks base method
func (m *MockGrm) GetEngines(partyCodes []string, token string) ([]*EngineInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEngines", partyCodes, token)
	ret0, _ := ret[0].([]*EngineInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEngines indicates an expected call of GetEngines
func (mr *MockGrmMockRecorder) GetEngines(partyCodes, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEngines", reflect.TypeOf((*MockGrm)(nil).GetEngines), partyCodes, token)
}

// VerifyTableOwnership mocks base method
func (m *MockGrm) VerifyTableOwnership(tid, token string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyTableOwnership", tid, token)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyTableOwnership indicates an expected call of VerifyTableOwnership
func (mr *MockGrmMockRecorder) VerifyTableOwnership(tid, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyTableOwnership", reflect.TypeOf((*MockGrm)(nil).VerifyTableOwnership), tid, token)
}
