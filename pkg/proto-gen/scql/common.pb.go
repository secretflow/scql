// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: api/common.proto

package scql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobState int32

const (
	JobState_JOB_STATE_UNSPECIFIED JobState = 0
	JobState_JOB_INITIALIZED       JobState = 1
	JobState_JOB_RUNNING           JobState = 2
	JobState_JOB_SUCCEEDED         JobState = 3
	JobState_JOB_FAILED            JobState = 4
	JobState_JOB_CANCELED          JobState = 5
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "JOB_STATE_UNSPECIFIED",
		1: "JOB_INITIALIZED",
		2: "JOB_RUNNING",
		3: "JOB_SUCCEEDED",
		4: "JOB_FAILED",
		5: "JOB_CANCELED",
	}
	JobState_value = map[string]int32{
		"JOB_STATE_UNSPECIFIED": 0,
		"JOB_INITIALIZED":       1,
		"JOB_RUNNING":           2,
		"JOB_SUCCEEDED":         3,
		"JOB_FAILED":            4,
		"JOB_CANCELED":          5,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_proto_enumTypes[0].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_api_common_proto_enumTypes[0]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{0}
}

type RequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomHeaders map[string]string `protobuf:"bytes,1,rep,name=custom_headers,json=customHeaders,proto3" json:"custom_headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RequestHeader) Reset() {
	*x = RequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeader) ProtoMessage() {}

func (x *RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeader.ProtoReflect.Descriptor instead.
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{0}
}

func (x *RequestHeader) GetCustomHeaders() map[string]string {
	if x != nil {
		return x.CustomHeaders
	}
	return nil
}

type DebugOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnablePsiDetailLog bool `protobuf:"varint,1,opt,name=enable_psi_detail_log,json=enablePsiDetailLog,proto3" json:"enable_psi_detail_log,omitempty"`
}

func (x *DebugOptions) Reset() {
	*x = DebugOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugOptions) ProtoMessage() {}

func (x *DebugOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugOptions.ProtoReflect.Descriptor instead.
func (*DebugOptions) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{1}
}

func (x *DebugOptions) GetEnablePsiDetailLog() bool {
	if x != nil {
		return x.EnablePsiDetailLog
	}
	return false
}

type SQLWarning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *SQLWarning) Reset() {
	*x = SQLWarning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLWarning) ProtoMessage() {}

func (x *SQLWarning) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLWarning.ProtoReflect.Descriptor instead.
func (*SQLWarning) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{2}
}

func (x *SQLWarning) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type IOStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendBytes   uint64 `protobuf:"varint,1,opt,name=send_bytes,json=sendBytes,proto3" json:"send_bytes,omitempty"`
	RecvBytes   uint64 `protobuf:"varint,2,opt,name=recv_bytes,json=recvBytes,proto3" json:"recv_bytes,omitempty"`
	SendActions uint64 `protobuf:"varint,3,opt,name=send_actions,json=sendActions,proto3" json:"send_actions,omitempty"`
	RecvActions uint64 `protobuf:"varint,4,opt,name=recv_actions,json=recvActions,proto3" json:"recv_actions,omitempty"`
}

func (x *IOStats) Reset() {
	*x = IOStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IOStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOStats) ProtoMessage() {}

func (x *IOStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOStats.ProtoReflect.Descriptor instead.
func (*IOStats) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{3}
}

func (x *IOStats) GetSendBytes() uint64 {
	if x != nil {
		return x.SendBytes
	}
	return 0
}

func (x *IOStats) GetRecvBytes() uint64 {
	if x != nil {
		return x.RecvBytes
	}
	return 0
}

func (x *IOStats) GetSendActions() uint64 {
	if x != nil {
		return x.SendActions
	}
	return 0
}

func (x *IOStats) GetRecvActions() uint64 {
	if x != nil {
		return x.RecvActions
	}
	return 0
}

type StageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Summary   string                 `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Details   *anypb.Any             `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *StageInfo) Reset() {
	*x = StageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageInfo) ProtoMessage() {}

func (x *StageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageInfo.ProtoReflect.Descriptor instead.
func (*StageInfo) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{4}
}

func (x *StageInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StageInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *StageInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *StageInfo) GetDetails() *anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type JobProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StagesCount    int32                  `protobuf:"varint,2,opt,name=stages_count,json=stagesCount,proto3" json:"stages_count,omitempty"`
	ExecutedStages int32                  `protobuf:"varint,3,opt,name=executed_stages,json=executedStages,proto3" json:"executed_stages,omitempty"`
	IoStats        *IOStats               `protobuf:"bytes,4,opt,name=io_stats,json=ioStats,proto3" json:"io_stats,omitempty"`
	RunningStages  []*StageInfo           `protobuf:"bytes,5,rep,name=running_stages,json=runningStages,proto3" json:"running_stages,omitempty"`
}

func (x *JobProgress) Reset() {
	*x = JobProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress) ProtoMessage() {}

func (x *JobProgress) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress.ProtoReflect.Descriptor instead.
func (*JobProgress) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{5}
}

func (x *JobProgress) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *JobProgress) GetStagesCount() int32 {
	if x != nil {
		return x.StagesCount
	}
	return 0
}

func (x *JobProgress) GetExecutedStages() int32 {
	if x != nil {
		return x.ExecutedStages
	}
	return 0
}

func (x *JobProgress) GetIoStats() *IOStats {
	if x != nil {
		return x.IoStats
	}
	return nil
}

func (x *JobProgress) GetRunningStages() []*StageInfo {
	if x != nil {
		return x.RunningStages
	}
	return nil
}

type LinkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkRecvTimeoutSec          int64 `protobuf:"varint,1,opt,name=link_recv_timeout_sec,json=linkRecvTimeoutSec,proto3" json:"link_recv_timeout_sec,omitempty"`
	LinkThrottleWindowSize      int64 `protobuf:"varint,2,opt,name=link_throttle_window_size,json=linkThrottleWindowSize,proto3" json:"link_throttle_window_size,omitempty"`
	LinkChunkedSendParallelSize int64 `protobuf:"varint,3,opt,name=link_chunked_send_parallel_size,json=linkChunkedSendParallelSize,proto3" json:"link_chunked_send_parallel_size,omitempty"`
	HttpMaxPayloadSize          int64 `protobuf:"varint,4,opt,name=http_max_payload_size,json=httpMaxPayloadSize,proto3" json:"http_max_payload_size,omitempty"`
}

func (x *LinkConfig) Reset() {
	*x = LinkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkConfig) ProtoMessage() {}

func (x *LinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkConfig.ProtoReflect.Descriptor instead.
func (*LinkConfig) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{6}
}

func (x *LinkConfig) GetLinkRecvTimeoutSec() int64 {
	if x != nil {
		return x.LinkRecvTimeoutSec
	}
	return 0
}

func (x *LinkConfig) GetLinkThrottleWindowSize() int64 {
	if x != nil {
		return x.LinkThrottleWindowSize
	}
	return 0
}

func (x *LinkConfig) GetLinkChunkedSendParallelSize() int64 {
	if x != nil {
		return x.LinkChunkedSendParallelSize
	}
	return 0
}

func (x *LinkConfig) GetHttpMaxPayloadSize() int64 {
	if x != nil {
		return x.HttpMaxPayloadSize
	}
	return 0
}

type PsiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnbalancePsiRatioThreshold                int64 `protobuf:"varint,1,opt,name=unbalance_psi_ratio_threshold,json=unbalancePsiRatioThreshold,proto3" json:"unbalance_psi_ratio_threshold,omitempty"`
	UnbalancePsiLargerPartyRowsCountThreshold int64 `protobuf:"varint,2,opt,name=unbalance_psi_larger_party_rows_count_threshold,json=unbalancePsiLargerPartyRowsCountThreshold,proto3" json:"unbalance_psi_larger_party_rows_count_threshold,omitempty"`
	PsiCurveType                              int32 `protobuf:"varint,3,opt,name=psi_curve_type,json=psiCurveType,proto3" json:"psi_curve_type,omitempty"`
}

func (x *PsiConfig) Reset() {
	*x = PsiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PsiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsiConfig) ProtoMessage() {}

func (x *PsiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsiConfig.ProtoReflect.Descriptor instead.
func (*PsiConfig) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{7}
}

func (x *PsiConfig) GetUnbalancePsiRatioThreshold() int64 {
	if x != nil {
		return x.UnbalancePsiRatioThreshold
	}
	return 0
}

func (x *PsiConfig) GetUnbalancePsiLargerPartyRowsCountThreshold() int64 {
	if x != nil {
		return x.UnbalancePsiLargerPartyRowsCountThreshold
	}
	return 0
}

func (x *PsiConfig) GetPsiCurveType() int32 {
	if x != nil {
		return x.PsiCurveType
	}
	return 0
}

type LogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableSessionLoggerSeparation bool `protobuf:"varint,1,opt,name=enable_session_logger_separation,json=enableSessionLoggerSeparation,proto3" json:"enable_session_logger_separation,omitempty"`
}

func (x *LogConfig) Reset() {
	*x = LogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogConfig) ProtoMessage() {}

func (x *LogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogConfig.ProtoReflect.Descriptor instead.
func (*LogConfig) Descriptor() ([]byte, []int) {
	return file_api_common_proto_rawDescGZIP(), []int{8}
}

func (x *LogConfig) GetEnableSessionLoggerSeparation() bool {
	if x != nil {
		return x.EnableSessionLoggerSeparation
	}
	return false
}

var File_api_common_proto protoreflect.FileDescriptor

var file_api_common_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41, 0x0a,
	0x0c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a,
	0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x73, 0x69, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x73, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67,
	0x22, 0x24, 0x0a, 0x0a, 0x53, 0x51, 0x4c, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x49, 0x4f, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x63, 0x76, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x76, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xfc, 0x01,
	0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x4f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x07, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf3, 0x01, 0x0a,
	0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x31, 0x0a, 0x15, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x63, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x39,
	0x0a, 0x19, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x31, 0x0a, 0x15, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x68, 0x74, 0x74, 0x70, 0x4d, 0x61, 0x78, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x09, 0x50, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x41, 0x0a, 0x1d, 0x75, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x73,
	0x69, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x75, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x73, 0x69, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x62, 0x0a, 0x2f, 0x75, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x70, 0x73, 0x69, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x29, 0x75, 0x6e,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x73, 0x69, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x6f, 0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x73, 0x69, 0x5f, 0x63,
	0x75, 0x72, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x73, 0x69, 0x43, 0x75, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x20, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2a, 0x80, 0x01, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4a,
	0x4f, 0x42, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x4f, 0x42, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x4f, 0x42, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x42, 0x25, 0x0a, 0x13, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x5a, 0x0e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x71, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_common_proto_rawDescOnce sync.Once
	file_api_common_proto_rawDescData = file_api_common_proto_rawDesc
)

func file_api_common_proto_rawDescGZIP() []byte {
	file_api_common_proto_rawDescOnce.Do(func() {
		file_api_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_proto_rawDescData)
	})
	return file_api_common_proto_rawDescData
}

var file_api_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_common_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_common_proto_goTypes = []interface{}{
	(JobState)(0),                 // 0: scql.pb.JobState
	(*RequestHeader)(nil),         // 1: scql.pb.RequestHeader
	(*DebugOptions)(nil),          // 2: scql.pb.DebugOptions
	(*SQLWarning)(nil),            // 3: scql.pb.SQLWarning
	(*IOStats)(nil),               // 4: scql.pb.IOStats
	(*StageInfo)(nil),             // 5: scql.pb.StageInfo
	(*JobProgress)(nil),           // 6: scql.pb.JobProgress
	(*LinkConfig)(nil),            // 7: scql.pb.LinkConfig
	(*PsiConfig)(nil),             // 8: scql.pb.PsiConfig
	(*LogConfig)(nil),             // 9: scql.pb.LogConfig
	nil,                           // 10: scql.pb.RequestHeader.CustomHeadersEntry
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 12: google.protobuf.Any
}
var file_api_common_proto_depIdxs = []int32{
	10, // 0: scql.pb.RequestHeader.custom_headers:type_name -> scql.pb.RequestHeader.CustomHeadersEntry
	11, // 1: scql.pb.StageInfo.start_time:type_name -> google.protobuf.Timestamp
	12, // 2: scql.pb.StageInfo.details:type_name -> google.protobuf.Any
	11, // 3: scql.pb.JobProgress.start_time:type_name -> google.protobuf.Timestamp
	4,  // 4: scql.pb.JobProgress.io_stats:type_name -> scql.pb.IOStats
	5,  // 5: scql.pb.JobProgress.running_stages:type_name -> scql.pb.StageInfo
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_common_proto_init() }
func file_api_common_proto_init() {
	if File_api_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLWarning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IOStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PsiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_proto_goTypes,
		DependencyIndexes: file_api_common_proto_depIdxs,
		EnumInfos:         file_api_common_proto_enumTypes,
		MessageInfos:      file_api_common_proto_msgTypes,
	}.Build()
	File_api_common_proto = out.File
	file_api_common_proto_rawDesc = nil
	file_api_common_proto_goTypes = nil
	file_api_common_proto_depIdxs = nil
}
