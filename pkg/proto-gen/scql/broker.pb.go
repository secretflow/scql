// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/broker.proto

package scql

import (
	context "context"
	spu "github.com/secretflow/scql/pkg/proto-gen/spu"
	_ "google.golang.org/genproto/googleapis/api"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvitationRespond int32

const (
	InvitationRespond_ACCEPT  InvitationRespond = 0
	InvitationRespond_DECLINE InvitationRespond = 1
)

// Enum value maps for InvitationRespond.
var (
	InvitationRespond_name = map[int32]string{
		0: "ACCEPT",
		1: "DECLINE",
	}
	InvitationRespond_value = map[string]int32{
		"ACCEPT":  0,
		"DECLINE": 1,
	}
)

func (x InvitationRespond) Enum() *InvitationRespond {
	p := new(InvitationRespond)
	*p = x
	return p
}

func (x InvitationRespond) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationRespond) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[0].Descriptor()
}

func (InvitationRespond) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[0]
}

func (x InvitationRespond) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationRespond.Descriptor instead.
func (InvitationRespond) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{0}
}

type InvitationStatus int32

const (
	InvitationStatus_UNDECIDED InvitationStatus = 0
	InvitationStatus_ACCEPTED  InvitationStatus = 1
	InvitationStatus_DECLINED  InvitationStatus = 2
	InvitationStatus_INVALID   InvitationStatus = 3
)

// Enum value maps for InvitationStatus.
var (
	InvitationStatus_name = map[int32]string{
		0: "UNDECIDED",
		1: "ACCEPTED",
		2: "DECLINED",
		3: "INVALID",
	}
	InvitationStatus_value = map[string]int32{
		"UNDECIDED": 0,
		"ACCEPTED":  1,
		"DECLINED":  2,
		"INVALID":   3,
	}
)

func (x InvitationStatus) Enum() *InvitationStatus {
	p := new(InvitationStatus)
	*p = x
	return p
}

func (x InvitationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[1].Descriptor()
}

func (InvitationStatus) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[1]
}

func (x InvitationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationStatus.Descriptor instead.
func (InvitationStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{1}
}

type ChecksumCompareResult int32

const (
	ChecksumCompareResult_EQUAL                  ChecksumCompareResult = 0
	ChecksumCompareResult_TABLE_SCHEMA_NOT_EQUAL ChecksumCompareResult = 1
	ChecksumCompareResult_CCL_NOT_EQUAL          ChecksumCompareResult = 2
	ChecksumCompareResult_TABLE_CCL_NOT_EQUAL    ChecksumCompareResult = 3
)

// Enum value maps for ChecksumCompareResult.
var (
	ChecksumCompareResult_name = map[int32]string{
		0: "EQUAL",
		1: "TABLE_SCHEMA_NOT_EQUAL",
		2: "CCL_NOT_EQUAL",
		3: "TABLE_CCL_NOT_EQUAL",
	}
	ChecksumCompareResult_value = map[string]int32{
		"EQUAL":                  0,
		"TABLE_SCHEMA_NOT_EQUAL": 1,
		"CCL_NOT_EQUAL":          2,
		"TABLE_CCL_NOT_EQUAL":    3,
	}
)

func (x ChecksumCompareResult) Enum() *ChecksumCompareResult {
	p := new(ChecksumCompareResult)
	*p = x
	return p
}

func (x ChecksumCompareResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChecksumCompareResult) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[2].Descriptor()
}

func (ChecksumCompareResult) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[2]
}

func (x ChecksumCompareResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChecksumCompareResult.Descriptor instead.
func (ChecksumCompareResult) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{2}
}

type BrokerProtocolVersion int32

const (
	BrokerProtocolVersion_BROKER_SERVICE_PROTOCOL_V1 BrokerProtocolVersion = 0
)

// Enum value maps for BrokerProtocolVersion.
var (
	BrokerProtocolVersion_name = map[int32]string{
		0: "BROKER_SERVICE_PROTOCOL_V1",
	}
	BrokerProtocolVersion_value = map[string]int32{
		"BROKER_SERVICE_PROTOCOL_V1": 0,
	}
)

func (x BrokerProtocolVersion) Enum() *BrokerProtocolVersion {
	p := new(BrokerProtocolVersion)
	*p = x
	return p
}

func (x BrokerProtocolVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrokerProtocolVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[3].Descriptor()
}

func (BrokerProtocolVersion) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[3]
}

func (x BrokerProtocolVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrokerProtocolVersion.Descriptor instead.
func (BrokerProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{3}
}

type Constraint int32

const (
	Constraint_UNKNOWN                   Constraint = 0
	Constraint_PLAINTEXT                 Constraint = 1
	Constraint_ENCRYPTED_ONLY            Constraint = 2
	Constraint_PLAINTEXT_AFTER_JOIN      Constraint = 3
	Constraint_PLAINTEXT_AFTER_GROUP_BY  Constraint = 4
	Constraint_PLAINTEXT_AFTER_COMPARE   Constraint = 5
	Constraint_PLAINTEXT_AFTER_AGGREGATE Constraint = 6
)

// Enum value maps for Constraint.
var (
	Constraint_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLAINTEXT",
		2: "ENCRYPTED_ONLY",
		3: "PLAINTEXT_AFTER_JOIN",
		4: "PLAINTEXT_AFTER_GROUP_BY",
		5: "PLAINTEXT_AFTER_COMPARE",
		6: "PLAINTEXT_AFTER_AGGREGATE",
	}
	Constraint_value = map[string]int32{
		"UNKNOWN":                   0,
		"PLAINTEXT":                 1,
		"ENCRYPTED_ONLY":            2,
		"PLAINTEXT_AFTER_JOIN":      3,
		"PLAINTEXT_AFTER_GROUP_BY":  4,
		"PLAINTEXT_AFTER_COMPARE":   5,
		"PLAINTEXT_AFTER_AGGREGATE": 6,
	}
)

func (x Constraint) Enum() *Constraint {
	p := new(Constraint)
	*p = x
	return p
}

func (x Constraint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Constraint) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[4].Descriptor()
}

func (Constraint) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[4]
}

func (x Constraint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Constraint.Descriptor instead.
func (Constraint) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{4}
}

type InviteMemberRequest_InvitationMethod int32

const (
	InviteMemberRequest_PUSH InviteMemberRequest_InvitationMethod = 0
	InviteMemberRequest_PULL InviteMemberRequest_InvitationMethod = 1
)

// Enum value maps for InviteMemberRequest_InvitationMethod.
var (
	InviteMemberRequest_InvitationMethod_name = map[int32]string{
		0: "PUSH",
		1: "PULL",
	}
	InviteMemberRequest_InvitationMethod_value = map[string]int32{
		"PUSH": 0,
		"PULL": 1,
	}
)

func (x InviteMemberRequest_InvitationMethod) Enum() *InviteMemberRequest_InvitationMethod {
	p := new(InviteMemberRequest_InvitationMethod)
	*p = x
	return p
}

func (x InviteMemberRequest_InvitationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteMemberRequest_InvitationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[5].Descriptor()
}

func (InviteMemberRequest_InvitationMethod) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[5]
}

func (x InviteMemberRequest_InvitationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteMemberRequest_InvitationMethod.Descriptor instead.
func (InviteMemberRequest_InvitationMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{31, 0}
}

type ChangeEntry_Action int32

const (
	ChangeEntry_CreateTable       ChangeEntry_Action = 0
	ChangeEntry_DropTable         ChangeEntry_Action = 1
	ChangeEntry_GrantCCL          ChangeEntry_Action = 2
	ChangeEntry_RevokeCCL         ChangeEntry_Action = 3
	ChangeEntry_AddProjectMember  ChangeEntry_Action = 4
	ChangeEntry_UpdateProjectConf ChangeEntry_Action = 5
	ChangeEntry_ArchiveProject    ChangeEntry_Action = 6
)

// Enum value maps for ChangeEntry_Action.
var (
	ChangeEntry_Action_name = map[int32]string{
		0: "CreateTable",
		1: "DropTable",
		2: "GrantCCL",
		3: "RevokeCCL",
		4: "AddProjectMember",
		5: "UpdateProjectConf",
		6: "ArchiveProject",
	}
	ChangeEntry_Action_value = map[string]int32{
		"CreateTable":       0,
		"DropTable":         1,
		"GrantCCL":          2,
		"RevokeCCL":         3,
		"AddProjectMember":  4,
		"UpdateProjectConf": 5,
		"ArchiveProject":    6,
	}
)

func (x ChangeEntry_Action) Enum() *ChangeEntry_Action {
	p := new(ChangeEntry_Action)
	*p = x
	return p
}

func (x ChangeEntry_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeEntry_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[6].Descriptor()
}

func (ChangeEntry_Action) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[6]
}

func (x ChangeEntry_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeEntry_Action.Descriptor instead.
func (ChangeEntry_Action) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{42, 0}
}

type ResourceSpec_ResourceKind int32

const (
	ResourceSpec_Project ResourceSpec_ResourceKind = 0
	ResourceSpec_Table   ResourceSpec_ResourceKind = 1
	ResourceSpec_CCL     ResourceSpec_ResourceKind = 2
)

// Enum value maps for ResourceSpec_ResourceKind.
var (
	ResourceSpec_ResourceKind_name = map[int32]string{
		0: "Project",
		1: "Table",
		2: "CCL",
	}
	ResourceSpec_ResourceKind_value = map[string]int32{
		"Project": 0,
		"Table":   1,
		"CCL":     2,
	}
)

func (x ResourceSpec_ResourceKind) Enum() *ResourceSpec_ResourceKind {
	p := new(ResourceSpec_ResourceKind)
	*p = x
	return p
}

func (x ResourceSpec_ResourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceSpec_ResourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_broker_proto_enumTypes[7].Descriptor()
}

func (ResourceSpec_ResourceKind) Type() protoreflect.EnumType {
	return &file_api_broker_proto_enumTypes[7]
}

func (x ResourceSpec_ResourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceSpec_ResourceKind.Descriptor instead.
func (ResourceSpec_ResourceKind) EnumDescriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{45, 0}
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ProjectId string         `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Query     string         `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QueryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AffectedRows int64         `protobuf:"varint,2,opt,name=affected_rows,json=affectedRows,proto3" json:"affected_rows,omitempty"`
	Warnings     []*SQLWarning `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	CostTimeS    float64       `protobuf:"fixed64,4,opt,name=cost_time_s,json=costTimeS,proto3" json:"cost_time_s,omitempty"`
	OutColumns   []*Tensor     `protobuf:"bytes,1000,rep,name=out_columns,json=outColumns,proto3" json:"out_columns,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryResponse) GetAffectedRows() int64 {
	if x != nil {
		return x.AffectedRows
	}
	return 0
}

func (x *QueryResponse) GetWarnings() []*SQLWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *QueryResponse) GetCostTimeS() float64 {
	if x != nil {
		return x.CostTimeS
	}
	return 0
}

func (x *QueryResponse) GetOutColumns() []*Tensor {
	if x != nil {
		return x.OutColumns
	}
	return nil
}

type SubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	JobId  string  `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SubmitResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type FetchResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *FetchResultRequest) Reset() {
	*x = FetchResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResultRequest) ProtoMessage() {}

func (x *FetchResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResultRequest.ProtoReflect.Descriptor instead.
func (*FetchResultRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{3}
}

func (x *FetchResultRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string         `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name        string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Conf        *ProjectConfig `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{4}
}

func (x *CreateProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetConf() *ProjectConfig {
	if x != nil {
		return x.Conf
	}
	return nil
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ProjectId string  `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{5}
}

func (x *CreateProjectResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateProjectResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string         `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Conf      *ProjectConfig `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectRequest) GetConf() *ProjectConfig {
	if x != nil {
		return x.Conf
	}
	return nil
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateProjectResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{8}
}

func (x *ListProjectsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *Status        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Projects []*ProjectDesc `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{9}
}

func (x *ListProjectsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListProjectsResponse) GetProjects() []*ProjectDesc {
	if x != nil {
		return x.Projects
	}
	return nil
}

type ProjectDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string         `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name        string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Conf        *ProjectConfig `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
	Creator     string         `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Members     []string       `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *ProjectDesc) Reset() {
	*x = ProjectDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDesc) ProtoMessage() {}

func (x *ProjectDesc) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDesc.ProtoReflect.Descriptor instead.
func (*ProjectDesc) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectDesc) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectDesc) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectDesc) GetConf() *ProjectConfig {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *ProjectDesc) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ProjectDesc) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type ArchiveProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Comment   string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ArchiveProjectRequest) Reset() {
	*x = ArchiveProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveProjectRequest) ProtoMessage() {}

func (x *ArchiveProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveProjectRequest.ProtoReflect.Descriptor instead.
func (*ArchiveProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{11}
}

func (x *ArchiveProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ArchiveProjectRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ArchiveProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ArchiveProjectResponse) Reset() {
	*x = ArchiveProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveProjectResponse) ProtoMessage() {}

func (x *ArchiveProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveProjectResponse.ProtoReflect.Descriptor instead.
func (*ArchiveProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{12}
}

func (x *ArchiveProjectResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListInvitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListInvitationsRequest) Reset() {
	*x = ListInvitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitationsRequest) ProtoMessage() {}

func (x *ListInvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitationsRequest.ProtoReflect.Descriptor instead.
func (*ListInvitationsRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{13}
}

type ListInvitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *Status              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Invitations []*ProjectInvitation `protobuf:"bytes,2,rep,name=invitations,proto3" json:"invitations,omitempty"`
}

func (x *ListInvitationsResponse) Reset() {
	*x = ListInvitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvitationsResponse) ProtoMessage() {}

func (x *ListInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvitationsResponse.ProtoReflect.Descriptor instead.
func (*ListInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{14}
}

func (x *ListInvitationsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListInvitationsResponse) GetInvitations() []*ProjectInvitation {
	if x != nil {
		return x.Invitations
	}
	return nil
}

type ProcessInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationId   uint64            `protobuf:"varint,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	Respond        InvitationRespond `protobuf:"varint,2,opt,name=respond,proto3,enum=scql.pb.InvitationRespond" json:"respond,omitempty"`
	RespondComment string            `protobuf:"bytes,3,opt,name=respond_comment,json=respondComment,proto3" json:"respond_comment,omitempty"`
}

func (x *ProcessInvitationRequest) Reset() {
	*x = ProcessInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInvitationRequest) ProtoMessage() {}

func (x *ProcessInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInvitationRequest.ProtoReflect.Descriptor instead.
func (*ProcessInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessInvitationRequest) GetInvitationId() uint64 {
	if x != nil {
		return x.InvitationId
	}
	return 0
}

func (x *ProcessInvitationRequest) GetRespond() InvitationRespond {
	if x != nil {
		return x.Respond
	}
	return InvitationRespond_ACCEPT
}

func (x *ProcessInvitationRequest) GetRespondComment() string {
	if x != nil {
		return x.RespondComment
	}
	return ""
}

type ProcessInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProcessInvitationResponse) Reset() {
	*x = ProcessInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInvitationResponse) ProtoMessage() {}

func (x *ProcessInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInvitationResponse.ProtoReflect.Descriptor instead.
func (*ProcessInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{16}
}

func (x *ProcessInvitationResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ProjectInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationId uint64           `protobuf:"varint,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	Project      *ProjectDesc     `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	Inviter      string           `protobuf:"bytes,3,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Invitee      string           `protobuf:"bytes,4,opt,name=invitee,proto3" json:"invitee,omitempty"`
	Postscript   string           `protobuf:"bytes,5,opt,name=postscript,proto3" json:"postscript,omitempty"`
	Status       InvitationStatus `protobuf:"varint,6,opt,name=status,proto3,enum=scql.pb.InvitationStatus" json:"status,omitempty"`
}

func (x *ProjectInvitation) Reset() {
	*x = ProjectInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInvitation) ProtoMessage() {}

func (x *ProjectInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInvitation.ProtoReflect.Descriptor instead.
func (*ProjectInvitation) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{17}
}

func (x *ProjectInvitation) GetInvitationId() uint64 {
	if x != nil {
		return x.InvitationId
	}
	return 0
}

func (x *ProjectInvitation) GetProject() *ProjectDesc {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *ProjectInvitation) GetInviter() string {
	if x != nil {
		return x.Inviter
	}
	return ""
}

func (x *ProjectInvitation) GetInvitee() string {
	if x != nil {
		return x.Invitee
	}
	return ""
}

func (x *ProjectInvitation) GetPostscript() string {
	if x != nil {
		return x.Postscript
	}
	return ""
}

func (x *ProjectInvitation) GetStatus() InvitationStatus {
	if x != nil {
		return x.Status
	}
	return InvitationStatus_UNDECIDED
}

type CreateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                           `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TableName string                           `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	RefTable  string                           `protobuf:"bytes,3,opt,name=ref_table,json=refTable,proto3" json:"ref_table,omitempty"`
	DbType    string                           `protobuf:"bytes,4,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	Columns   []*CreateTableRequest_ColumnDesc `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTableRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateTableRequest) GetRefTable() string {
	if x != nil {
		return x.RefTable
	}
	return ""
}

func (x *CreateTableRequest) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *CreateTableRequest) GetColumns() []*CreateTableRequest_ColumnDesc {
	if x != nil {
		return x.Columns
	}
	return nil
}

type CreateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{19}
}

func (x *CreateTableResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Names     []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{20}
}

func (x *ListTablesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListTablesRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ListTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Tables []*TableMeta `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ListTablesResponse) Reset() {
	*x = ListTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesResponse) ProtoMessage() {}

func (x *ListTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesResponse.ProtoReflect.Descriptor instead.
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{21}
}

func (x *ListTablesResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListTablesResponse) GetTables() []*TableMeta {
	if x != nil {
		return x.Tables
	}
	return nil
}

type DropTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *DropTableRequest) Reset() {
	*x = DropTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableRequest) ProtoMessage() {}

func (x *DropTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableRequest.ProtoReflect.Descriptor instead.
func (*DropTableRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{22}
}

func (x *DropTableRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DropTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type DropTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DropTableResponse) Reset() {
	*x = DropTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableResponse) ProtoMessage() {}

func (x *DropTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableResponse.ProtoReflect.Descriptor instead.
func (*DropTableResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{23}
}

func (x *DropTableResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GrantCCLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         string           `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ColumnControlList []*ColumnControl `protobuf:"bytes,2,rep,name=column_control_list,json=columnControlList,proto3" json:"column_control_list,omitempty"`
}

func (x *GrantCCLRequest) Reset() {
	*x = GrantCCLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantCCLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantCCLRequest) ProtoMessage() {}

func (x *GrantCCLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantCCLRequest.ProtoReflect.Descriptor instead.
func (*GrantCCLRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{24}
}

func (x *GrantCCLRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GrantCCLRequest) GetColumnControlList() []*ColumnControl {
	if x != nil {
		return x.ColumnControlList
	}
	return nil
}

type GrantCCLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GrantCCLResponse) Reset() {
	*x = GrantCCLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantCCLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantCCLResponse) ProtoMessage() {}

func (x *GrantCCLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantCCLResponse.ProtoReflect.Descriptor instead.
func (*GrantCCLResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{25}
}

func (x *GrantCCLResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type RevokeCCLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         string           `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ColumnControlList []*ColumnControl `protobuf:"bytes,2,rep,name=column_control_list,json=columnControlList,proto3" json:"column_control_list,omitempty"`
}

func (x *RevokeCCLRequest) Reset() {
	*x = RevokeCCLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCCLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCCLRequest) ProtoMessage() {}

func (x *RevokeCCLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCCLRequest.ProtoReflect.Descriptor instead.
func (*RevokeCCLRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{26}
}

func (x *RevokeCCLRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RevokeCCLRequest) GetColumnControlList() []*ColumnControl {
	if x != nil {
		return x.ColumnControlList
	}
	return nil
}

type RevokeCCLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RevokeCCLResponse) Reset() {
	*x = RevokeCCLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCCLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCCLResponse) ProtoMessage() {}

func (x *RevokeCCLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCCLResponse.ProtoReflect.Descriptor instead.
func (*RevokeCCLResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{27}
}

func (x *RevokeCCLResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ShowCCLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Tables      []string `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	DestParties []string `protobuf:"bytes,3,rep,name=dest_parties,json=destParties,proto3" json:"dest_parties,omitempty"`
}

func (x *ShowCCLRequest) Reset() {
	*x = ShowCCLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowCCLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowCCLRequest) ProtoMessage() {}

func (x *ShowCCLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowCCLRequest.ProtoReflect.Descriptor instead.
func (*ShowCCLRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{28}
}

func (x *ShowCCLRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ShowCCLRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ShowCCLRequest) GetDestParties() []string {
	if x != nil {
		return x.DestParties
	}
	return nil
}

type ShowCCLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            *Status          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ColumnControlList []*ColumnControl `protobuf:"bytes,2,rep,name=column_control_list,json=columnControlList,proto3" json:"column_control_list,omitempty"`
}

func (x *ShowCCLResponse) Reset() {
	*x = ShowCCLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowCCLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowCCLResponse) ProtoMessage() {}

func (x *ShowCCLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowCCLResponse.ProtoReflect.Descriptor instead.
func (*ShowCCLResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{29}
}

func (x *ShowCCLResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ShowCCLResponse) GetColumnControlList() []*ColumnControl {
	if x != nil {
		return x.ColumnControlList
	}
	return nil
}

type ProjectConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuRuntimeCfg *spu.RuntimeConfig `protobuf:"bytes,1,opt,name=spu_runtime_cfg,json=spuRuntimeCfg,proto3" json:"spu_runtime_cfg,omitempty"`
}

func (x *ProjectConfig) Reset() {
	*x = ProjectConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectConfig) ProtoMessage() {}

func (x *ProjectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectConfig.ProtoReflect.Descriptor instead.
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{30}
}

func (x *ProjectConfig) GetSpuRuntimeCfg() *spu.RuntimeConfig {
	if x != nil {
		return x.SpuRuntimeCfg
	}
	return nil
}

type InviteMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string                               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Invitee    string                               `protobuf:"bytes,2,opt,name=invitee,proto3" json:"invitee,omitempty"`
	Postscript string                               `protobuf:"bytes,3,opt,name=postscript,proto3" json:"postscript,omitempty"`
	Method     InviteMemberRequest_InvitationMethod `protobuf:"varint,4,opt,name=method,proto3,enum=scql.pb.InviteMemberRequest_InvitationMethod" json:"method,omitempty"`
}

func (x *InviteMemberRequest) Reset() {
	*x = InviteMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteMemberRequest) ProtoMessage() {}

func (x *InviteMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteMemberRequest.ProtoReflect.Descriptor instead.
func (*InviteMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{31}
}

func (x *InviteMemberRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *InviteMemberRequest) GetInvitee() string {
	if x != nil {
		return x.Invitee
	}
	return ""
}

func (x *InviteMemberRequest) GetPostscript() string {
	if x != nil {
		return x.Postscript
	}
	return ""
}

func (x *InviteMemberRequest) GetMethod() InviteMemberRequest_InvitationMethod {
	if x != nil {
		return x.Method
	}
	return InviteMemberRequest_PUSH
}

type InviteMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	InvitationCode string  `protobuf:"bytes,2,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
}

func (x *InviteMemberResponse) Reset() {
	*x = InviteMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteMemberResponse) ProtoMessage() {}

func (x *InviteMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteMemberResponse.ProtoReflect.Descriptor instead.
func (*InviteMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{32}
}

func (x *InviteMemberResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InviteMemberResponse) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

type DistributeQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *RequestHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ClientProtocol BrokerProtocolVersion `protobuf:"varint,2,opt,name=client_protocol,json=clientProtocol,proto3,enum=scql.pb.BrokerProtocolVersion" json:"client_protocol,omitempty"`
	ClientId       *PartyId              `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature      []byte                `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	ProjectId      string                `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	JobId          string                `protobuf:"bytes,6,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Query          string                `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	EngineEndpoint string                `protobuf:"bytes,8,opt,name=engine_endpoint,json=engineEndpoint,proto3" json:"engine_endpoint,omitempty"`
	ClientChecksum *Checksum             `protobuf:"bytes,9,opt,name=client_checksum,json=clientChecksum,proto3" json:"client_checksum,omitempty"`
	ServerChecksum *Checksum             `protobuf:"bytes,10,opt,name=server_checksum,json=serverChecksum,proto3" json:"server_checksum,omitempty"`
	IsAsync        bool                  `protobuf:"varint,11,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
}

func (x *DistributeQueryRequest) Reset() {
	*x = DistributeQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeQueryRequest) ProtoMessage() {}

func (x *DistributeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeQueryRequest.ProtoReflect.Descriptor instead.
func (*DistributeQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{33}
}

func (x *DistributeQueryRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DistributeQueryRequest) GetClientProtocol() BrokerProtocolVersion {
	if x != nil {
		return x.ClientProtocol
	}
	return BrokerProtocolVersion_BROKER_SERVICE_PROTOCOL_V1
}

func (x *DistributeQueryRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *DistributeQueryRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DistributeQueryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DistributeQueryRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *DistributeQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *DistributeQueryRequest) GetEngineEndpoint() string {
	if x != nil {
		return x.EngineEndpoint
	}
	return ""
}

func (x *DistributeQueryRequest) GetClientChecksum() *Checksum {
	if x != nil {
		return x.ClientChecksum
	}
	return nil
}

func (x *DistributeQueryRequest) GetServerChecksum() *Checksum {
	if x != nil {
		return x.ServerChecksum
	}
	return nil
}

func (x *DistributeQueryRequest) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

type DistributeQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 *Status               `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ServerProtocol         BrokerProtocolVersion `protobuf:"varint,2,opt,name=server_protocol,json=serverProtocol,proto3,enum=scql.pb.BrokerProtocolVersion" json:"server_protocol,omitempty"`
	EngineEndpoint         string                `protobuf:"bytes,3,opt,name=engine_endpoint,json=engineEndpoint,proto3" json:"engine_endpoint,omitempty"`
	ClientChecksumResult   ChecksumCompareResult `protobuf:"varint,4,opt,name=client_checksum_result,json=clientChecksumResult,proto3,enum=scql.pb.ChecksumCompareResult" json:"client_checksum_result,omitempty"`
	ServerChecksumResult   ChecksumCompareResult `protobuf:"varint,5,opt,name=server_checksum_result,json=serverChecksumResult,proto3,enum=scql.pb.ChecksumCompareResult" json:"server_checksum_result,omitempty"`
	ExpectedServerChecksum *Checksum             `protobuf:"bytes,6,opt,name=expected_server_checksum,json=expectedServerChecksum,proto3" json:"expected_server_checksum,omitempty"`
}

func (x *DistributeQueryResponse) Reset() {
	*x = DistributeQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeQueryResponse) ProtoMessage() {}

func (x *DistributeQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeQueryResponse.ProtoReflect.Descriptor instead.
func (*DistributeQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{34}
}

func (x *DistributeQueryResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DistributeQueryResponse) GetServerProtocol() BrokerProtocolVersion {
	if x != nil {
		return x.ServerProtocol
	}
	return BrokerProtocolVersion_BROKER_SERVICE_PROTOCOL_V1
}

func (x *DistributeQueryResponse) GetEngineEndpoint() string {
	if x != nil {
		return x.EngineEndpoint
	}
	return ""
}

func (x *DistributeQueryResponse) GetClientChecksumResult() ChecksumCompareResult {
	if x != nil {
		return x.ClientChecksumResult
	}
	return ChecksumCompareResult_EQUAL
}

func (x *DistributeQueryResponse) GetServerChecksumResult() ChecksumCompareResult {
	if x != nil {
		return x.ServerChecksumResult
	}
	return ChecksumCompareResult_EQUAL
}

func (x *DistributeQueryResponse) GetExpectedServerChecksum() *Checksum {
	if x != nil {
		return x.ExpectedServerChecksum
	}
	return nil
}

type CancelQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId  *PartyId `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	JobId     string   `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Reason    string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelQueryRequest) Reset() {
	*x = CancelQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryRequest) ProtoMessage() {}

func (x *CancelQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryRequest.ProtoReflect.Descriptor instead.
func (*CancelQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{35}
}

func (x *CancelQueryRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *CancelQueryRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CancelQueryRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CancelQueryRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CancelQueryResponse) Reset() {
	*x = CancelQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueryResponse) ProtoMessage() {}

func (x *CancelQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueryResponse.ProtoReflect.Descriptor instead.
func (*CancelQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{36}
}

func (x *CancelQueryResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type InviteToProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       *PartyId     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature      []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Project        *ProjectDesc `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	Inviter        string       `protobuf:"bytes,4,opt,name=inviter,proto3" json:"inviter,omitempty"`
	InvitationCode string       `protobuf:"bytes,5,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
}

func (x *InviteToProjectRequest) Reset() {
	*x = InviteToProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteToProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteToProjectRequest) ProtoMessage() {}

func (x *InviteToProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteToProjectRequest.ProtoReflect.Descriptor instead.
func (*InviteToProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{37}
}

func (x *InviteToProjectRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *InviteToProjectRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *InviteToProjectRequest) GetProject() *ProjectDesc {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *InviteToProjectRequest) GetInviter() string {
	if x != nil {
		return x.Inviter
	}
	return ""
}

func (x *InviteToProjectRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

type InviteToProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InviteToProjectResponse) Reset() {
	*x = InviteToProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteToProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteToProjectResponse) ProtoMessage() {}

func (x *InviteToProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteToProjectResponse.ProtoReflect.Descriptor instead.
func (*InviteToProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{38}
}

func (x *InviteToProjectResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ReplyInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       *PartyId          `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature      []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ProjectId      string            `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	InvitationCode string            `protobuf:"bytes,4,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
	Respond        InvitationRespond `protobuf:"varint,5,opt,name=respond,proto3,enum=scql.pb.InvitationRespond" json:"respond,omitempty"`
	RespondComment string            `protobuf:"bytes,6,opt,name=respond_comment,json=respondComment,proto3" json:"respond_comment,omitempty"`
}

func (x *ReplyInvitationRequest) Reset() {
	*x = ReplyInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInvitationRequest) ProtoMessage() {}

func (x *ReplyInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInvitationRequest.ProtoReflect.Descriptor instead.
func (*ReplyInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{39}
}

func (x *ReplyInvitationRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *ReplyInvitationRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ReplyInvitationRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ReplyInvitationRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

func (x *ReplyInvitationRequest) GetRespond() InvitationRespond {
	if x != nil {
		return x.Respond
	}
	return InvitationRespond_ACCEPT
}

func (x *ReplyInvitationRequest) GetRespondComment() string {
	if x != nil {
		return x.RespondComment
	}
	return ""
}

type ReplyInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ProjectInfo []byte  `protobuf:"bytes,2,opt,name=project_info,json=projectInfo,proto3" json:"project_info,omitempty"`
}

func (x *ReplyInvitationResponse) Reset() {
	*x = ReplyInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInvitationResponse) ProtoMessage() {}

func (x *ReplyInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInvitationResponse.ProtoReflect.Descriptor instead.
func (*ReplyInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{40}
}

func (x *ReplyInvitationResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReplyInvitationResponse) GetProjectInfo() []byte {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

type SyncInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    *PartyId     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature   []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ProjectId   string       `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ChangeEntry *ChangeEntry `protobuf:"bytes,4,opt,name=change_entry,json=changeEntry,proto3" json:"change_entry,omitempty"`
}

func (x *SyncInfoRequest) Reset() {
	*x = SyncInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInfoRequest) ProtoMessage() {}

func (x *SyncInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInfoRequest.ProtoReflect.Descriptor instead.
func (*SyncInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{41}
}

func (x *SyncInfoRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *SyncInfoRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SyncInfoRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SyncInfoRequest) GetChangeEntry() *ChangeEntry {
	if x != nil {
		return x.ChangeEntry
	}
	return nil
}

type ChangeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ChangeEntry_Action `protobuf:"varint,1,opt,name=action,proto3,enum=scql.pb.ChangeEntry_Action" json:"action,omitempty"`
	Data   []byte             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ChangeEntry) Reset() {
	*x = ChangeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEntry) ProtoMessage() {}

func (x *ChangeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEntry.ProtoReflect.Descriptor instead.
func (*ChangeEntry) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{42}
}

func (x *ChangeEntry) GetAction() ChangeEntry_Action {
	if x != nil {
		return x.Action
	}
	return ChangeEntry_CreateTable
}

func (x *ChangeEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SyncInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncInfoResponse) Reset() {
	*x = SyncInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInfoResponse) ProtoMessage() {}

func (x *SyncInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInfoResponse.ProtoReflect.Descriptor instead.
func (*SyncInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{43}
}

func (x *SyncInfoResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type AskInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId      *PartyId        `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature     []byte          `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	ResourceSpecs []*ResourceSpec `protobuf:"bytes,3,rep,name=resource_specs,json=resourceSpecs,proto3" json:"resource_specs,omitempty"`
}

func (x *AskInfoRequest) Reset() {
	*x = AskInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskInfoRequest) ProtoMessage() {}

func (x *AskInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskInfoRequest.ProtoReflect.Descriptor instead.
func (*AskInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{44}
}

func (x *AskInfoRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *AskInfoRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AskInfoRequest) GetResourceSpecs() []*ResourceSpec {
	if x != nil {
		return x.ResourceSpecs
	}
	return nil
}

type ResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        ResourceSpec_ResourceKind `protobuf:"varint,1,opt,name=kind,proto3,enum=scql.pb.ResourceSpec_ResourceKind" json:"kind,omitempty"`
	ProjectId   string                    `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TableNames  []string                  `protobuf:"bytes,3,rep,name=table_names,json=tableNames,proto3" json:"table_names,omitempty"`
	DestParties []string                  `protobuf:"bytes,4,rep,name=dest_parties,json=destParties,proto3" json:"dest_parties,omitempty"`
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{45}
}

func (x *ResourceSpec) GetKind() ResourceSpec_ResourceKind {
	if x != nil {
		return x.Kind
	}
	return ResourceSpec_Project
}

func (x *ResourceSpec) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ResourceSpec) GetTableNames() []string {
	if x != nil {
		return x.TableNames
	}
	return nil
}

func (x *ResourceSpec) GetDestParties() []string {
	if x != nil {
		return x.DestParties
	}
	return nil
}

type AskInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Datas  [][]byte `protobuf:"bytes,2,rep,name=datas,proto3" json:"datas,omitempty"`
}

func (x *AskInfoResponse) Reset() {
	*x = AskInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskInfoResponse) ProtoMessage() {}

func (x *AskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskInfoResponse.ProtoReflect.Descriptor instead.
func (*AskInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{46}
}

func (x *AskInfoResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AskInfoResponse) GetDatas() [][]byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

type Checksum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSchema []byte `protobuf:"bytes,1,opt,name=table_schema,json=tableSchema,proto3" json:"table_schema,omitempty"`
	Ccl         []byte `protobuf:"bytes,2,opt,name=ccl,proto3" json:"ccl,omitempty"`
}

func (x *Checksum) Reset() {
	*x = Checksum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checksum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checksum) ProtoMessage() {}

func (x *Checksum) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checksum.ProtoReflect.Descriptor instead.
func (*Checksum) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{47}
}

func (x *Checksum) GetTableSchema() []byte {
	if x != nil {
		return x.TableSchema
	}
	return nil
}

func (x *Checksum) GetCcl() []byte {
	if x != nil {
		return x.Ccl
	}
	return nil
}

type ExchangeJobInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string    `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	JobId          string    `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ClientId       *PartyId  `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature      []byte    `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	ServerChecksum *Checksum `protobuf:"bytes,5,opt,name=server_checksum,json=serverChecksum,proto3" json:"server_checksum,omitempty"`
}

func (x *ExchangeJobInfoRequest) Reset() {
	*x = ExchangeJobInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeJobInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeJobInfoRequest) ProtoMessage() {}

func (x *ExchangeJobInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeJobInfoRequest.ProtoReflect.Descriptor instead.
func (*ExchangeJobInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{48}
}

func (x *ExchangeJobInfoRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ExchangeJobInfoRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ExchangeJobInfoRequest) GetClientId() *PartyId {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *ExchangeJobInfoRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ExchangeJobInfoRequest) GetServerChecksum() *Checksum {
	if x != nil {
		return x.ServerChecksum
	}
	return nil
}

type ExchangeJobInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 *Status               `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Endpoint               string                `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ServerChecksumResult   ChecksumCompareResult `protobuf:"varint,3,opt,name=server_checksum_result,json=serverChecksumResult,proto3,enum=scql.pb.ChecksumCompareResult" json:"server_checksum_result,omitempty"`
	ExpectedServerChecksum *Checksum             `protobuf:"bytes,4,opt,name=expected_server_checksum,json=expectedServerChecksum,proto3" json:"expected_server_checksum,omitempty"`
}

func (x *ExchangeJobInfoResponse) Reset() {
	*x = ExchangeJobInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeJobInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeJobInfoResponse) ProtoMessage() {}

func (x *ExchangeJobInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeJobInfoResponse.ProtoReflect.Descriptor instead.
func (*ExchangeJobInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{49}
}

func (x *ExchangeJobInfoResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExchangeJobInfoResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ExchangeJobInfoResponse) GetServerChecksumResult() ChecksumCompareResult {
	if x != nil {
		return x.ServerChecksumResult
	}
	return ChecksumCompareResult_EQUAL
}

func (x *ExchangeJobInfoResponse) GetExpectedServerChecksum() *Checksum {
	if x != nil {
		return x.ExpectedServerChecksum
	}
	return nil
}

type TableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string              `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	RefTable   string              `protobuf:"bytes,2,opt,name=ref_table,json=refTable,proto3" json:"ref_table,omitempty"`
	DbType     string              `protobuf:"bytes,3,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	TableOwner string              `protobuf:"bytes,4,opt,name=table_owner,json=tableOwner,proto3" json:"table_owner,omitempty"`
	Columns    []*TableMeta_Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *TableMeta) Reset() {
	*x = TableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMeta) ProtoMessage() {}

func (x *TableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMeta.ProtoReflect.Descriptor instead.
func (*TableMeta) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{50}
}

func (x *TableMeta) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableMeta) GetRefTable() string {
	if x != nil {
		return x.RefTable
	}
	return ""
}

func (x *TableMeta) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *TableMeta) GetTableOwner() string {
	if x != nil {
		return x.TableOwner
	}
	return ""
}

func (x *TableMeta) GetColumns() []*TableMeta_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type PrivacyPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnControlList []*ColumnControl `protobuf:"bytes,1,rep,name=column_control_list,json=columnControlList,proto3" json:"column_control_list,omitempty"`
}

func (x *PrivacyPolicy) Reset() {
	*x = PrivacyPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivacyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyPolicy) ProtoMessage() {}

func (x *PrivacyPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyPolicy.ProtoReflect.Descriptor instead.
func (*PrivacyPolicy) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{51}
}

func (x *PrivacyPolicy) GetColumnControlList() []*ColumnControl {
	if x != nil {
		return x.ColumnControlList
	}
	return nil
}

type ColumnControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Col        *ColumnDef `protobuf:"bytes,1,opt,name=col,proto3" json:"col,omitempty"`
	PartyCode  string     `protobuf:"bytes,2,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	Constraint Constraint `protobuf:"varint,3,opt,name=constraint,proto3,enum=scql.pb.Constraint" json:"constraint,omitempty"`
}

func (x *ColumnControl) Reset() {
	*x = ColumnControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnControl) ProtoMessage() {}

func (x *ColumnControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnControl.ProtoReflect.Descriptor instead.
func (*ColumnControl) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{52}
}

func (x *ColumnControl) GetCol() *ColumnDef {
	if x != nil {
		return x.Col
	}
	return nil
}

func (x *ColumnControl) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *ColumnControl) GetConstraint() Constraint {
	if x != nil {
		return x.Constraint
	}
	return Constraint_UNKNOWN
}

type ColumnDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName string `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	TableName  string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *ColumnDef) Reset() {
	*x = ColumnDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDef) ProtoMessage() {}

func (x *ColumnDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDef.ProtoReflect.Descriptor instead.
func (*ColumnDef) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{53}
}

func (x *ColumnDef) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ColumnDef) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type CreateTableRequest_ColumnDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dtype string `protobuf:"bytes,2,opt,name=dtype,proto3" json:"dtype,omitempty"`
}

func (x *CreateTableRequest_ColumnDesc) Reset() {
	*x = CreateTableRequest_ColumnDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest_ColumnDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest_ColumnDesc) ProtoMessage() {}

func (x *CreateTableRequest_ColumnDesc) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest_ColumnDesc.ProtoReflect.Descriptor instead.
func (*CreateTableRequest_ColumnDesc) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CreateTableRequest_ColumnDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTableRequest_ColumnDesc) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

type TableMeta_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dtype string `protobuf:"bytes,2,opt,name=dtype,proto3" json:"dtype,omitempty"`
}

func (x *TableMeta_Column) Reset() {
	*x = TableMeta_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_broker_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMeta_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMeta_Column) ProtoMessage() {}

func (x *TableMeta_Column) ProtoReflect() protoreflect.Message {
	mi := &file_api_broker_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMeta_Column.ProtoReflect.Descriptor instead.
func (*TableMeta_Column) Descriptor() ([]byte, []int) {
	return file_api_broker_proto_rawDescGZIP(), []int{50, 0}
}

func (x *TableMeta_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableMeta_Column) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

var File_api_broker_proto protoreflect.FileDescriptor

var file_api_broker_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x1a, 0x10, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x6c, 0x69, 0x62, 0x73, 0x70, 0x75, 0x2f, 0x73, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7d, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0xe1, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x12,
	0x2f, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x51, 0x4c, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x12, 0x31, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0x5f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0x40, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x50, 0x0a,
	0x15, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x41, 0x0a, 0x16, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa8, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0d,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x19, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xef, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x72, 0x65, 0x66, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x1a, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3c, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x82, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x43, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x43, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6f, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x43, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x43,
	0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x0f,
	0x73, 0x70, 0x75, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x75, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x70, 0x75, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x66, 0x67, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x26, 0x0a, 0x10, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x4c, 0x4c,
	0x10, 0x01, 0x22, 0x68, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe6, 0x03, 0x0a,
	0x16, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x3a,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x22, 0xad, 0x03, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x16,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x14, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x16, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb6, 0x01,
	0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x86, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x43, 0x43, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x43, 0x43, 0x4c, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x06, 0x22, 0x3b, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x41, 0x73, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x2f, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x4c, 0x10, 0x02,
	0x22, 0x50, 0x0a, 0x0f, 0x41, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x22, 0x3f, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x63, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x63, 0x63, 0x6c, 0x22, 0xd7, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x81, 0x02,
	0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x54,
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x14,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x16, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x22, 0xea, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a, 0x32, 0x0a, 0x06, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x22, 0x57,
	0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x46, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x24, 0x0a, 0x03, 0x63, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x66, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x66,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x2a, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x2a, 0x4a,
	0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x43, 0x49, 0x44, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x2a, 0x6a, 0x0a, 0x15, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x43,
	0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x43, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45,
	0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x2a, 0x37, 0x0a, 0x15, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x1a, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x56, 0x31, 0x10, 0x00, 0x2a,
	0xb0, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x4c, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4e,
	0x43, 0x52, 0x59, 0x50, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x46, 0x54, 0x45,
	0x52, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x4c, 0x41, 0x49,
	0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x42, 0x59, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x54,
	0x45, 0x58, 0x54, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x52,
	0x45, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45,
	0x10, 0x06, 0x32, 0xe0, 0x0c, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x72, 0x61, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x44, 0x6f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a, 0x0b,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x0b, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x70,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1d, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x51, 0x0a,
	0x0e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6c, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x77,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x09, 0x44, 0x72, 0x6f,
	0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2f, 0x64, 0x72, 0x6f, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x08, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x43, 0x43, 0x4c, 0x12, 0x18, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x63, 0x63, 0x6c,
	0x2f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x09, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x43, 0x43, 0x4c, 0x12, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x63, 0x63,
	0x6c, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x58, 0x0a, 0x07, 0x53,
	0x68, 0x6f, 0x77, 0x43, 0x43, 0x4c, 0x12, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x43, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x43,
	0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x22, 0x0f, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x2f, 0x63, 0x63, 0x6c, 0x2f, 0x73, 0x68,
	0x6f, 0x77, 0x3a, 0x01, 0x2a, 0x32, 0xb5, 0x04, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x54, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x41, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x71, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_broker_proto_rawDescOnce sync.Once
	file_api_broker_proto_rawDescData = file_api_broker_proto_rawDesc
)

func file_api_broker_proto_rawDescGZIP() []byte {
	file_api_broker_proto_rawDescOnce.Do(func() {
		file_api_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_broker_proto_rawDescData)
	})
	return file_api_broker_proto_rawDescData
}

var file_api_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_api_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_api_broker_proto_goTypes = []interface{}{
	(InvitationRespond)(0),                    // 0: scql.pb.InvitationRespond
	(InvitationStatus)(0),                     // 1: scql.pb.InvitationStatus
	(ChecksumCompareResult)(0),                // 2: scql.pb.ChecksumCompareResult
	(BrokerProtocolVersion)(0),                // 3: scql.pb.BrokerProtocolVersion
	(Constraint)(0),                           // 4: scql.pb.Constraint
	(InviteMemberRequest_InvitationMethod)(0), // 5: scql.pb.InviteMemberRequest.InvitationMethod
	(ChangeEntry_Action)(0),                   // 6: scql.pb.ChangeEntry.Action
	(ResourceSpec_ResourceKind)(0),            // 7: scql.pb.ResourceSpec.ResourceKind
	(*QueryRequest)(nil),                      // 8: scql.pb.QueryRequest
	(*QueryResponse)(nil),                     // 9: scql.pb.QueryResponse
	(*SubmitResponse)(nil),                    // 10: scql.pb.SubmitResponse
	(*FetchResultRequest)(nil),                // 11: scql.pb.FetchResultRequest
	(*CreateProjectRequest)(nil),              // 12: scql.pb.CreateProjectRequest
	(*CreateProjectResponse)(nil),             // 13: scql.pb.CreateProjectResponse
	(*UpdateProjectRequest)(nil),              // 14: scql.pb.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),             // 15: scql.pb.UpdateProjectResponse
	(*ListProjectsRequest)(nil),               // 16: scql.pb.ListProjectsRequest
	(*ListProjectsResponse)(nil),              // 17: scql.pb.ListProjectsResponse
	(*ProjectDesc)(nil),                       // 18: scql.pb.ProjectDesc
	(*ArchiveProjectRequest)(nil),             // 19: scql.pb.ArchiveProjectRequest
	(*ArchiveProjectResponse)(nil),            // 20: scql.pb.ArchiveProjectResponse
	(*ListInvitationsRequest)(nil),            // 21: scql.pb.ListInvitationsRequest
	(*ListInvitationsResponse)(nil),           // 22: scql.pb.ListInvitationsResponse
	(*ProcessInvitationRequest)(nil),          // 23: scql.pb.ProcessInvitationRequest
	(*ProcessInvitationResponse)(nil),         // 24: scql.pb.ProcessInvitationResponse
	(*ProjectInvitation)(nil),                 // 25: scql.pb.ProjectInvitation
	(*CreateTableRequest)(nil),                // 26: scql.pb.CreateTableRequest
	(*CreateTableResponse)(nil),               // 27: scql.pb.CreateTableResponse
	(*ListTablesRequest)(nil),                 // 28: scql.pb.ListTablesRequest
	(*ListTablesResponse)(nil),                // 29: scql.pb.ListTablesResponse
	(*DropTableRequest)(nil),                  // 30: scql.pb.DropTableRequest
	(*DropTableResponse)(nil),                 // 31: scql.pb.DropTableResponse
	(*GrantCCLRequest)(nil),                   // 32: scql.pb.GrantCCLRequest
	(*GrantCCLResponse)(nil),                  // 33: scql.pb.GrantCCLResponse
	(*RevokeCCLRequest)(nil),                  // 34: scql.pb.RevokeCCLRequest
	(*RevokeCCLResponse)(nil),                 // 35: scql.pb.RevokeCCLResponse
	(*ShowCCLRequest)(nil),                    // 36: scql.pb.ShowCCLRequest
	(*ShowCCLResponse)(nil),                   // 37: scql.pb.ShowCCLResponse
	(*ProjectConfig)(nil),                     // 38: scql.pb.ProjectConfig
	(*InviteMemberRequest)(nil),               // 39: scql.pb.InviteMemberRequest
	(*InviteMemberResponse)(nil),              // 40: scql.pb.InviteMemberResponse
	(*DistributeQueryRequest)(nil),            // 41: scql.pb.DistributeQueryRequest
	(*DistributeQueryResponse)(nil),           // 42: scql.pb.DistributeQueryResponse
	(*CancelQueryRequest)(nil),                // 43: scql.pb.CancelQueryRequest
	(*CancelQueryResponse)(nil),               // 44: scql.pb.CancelQueryResponse
	(*InviteToProjectRequest)(nil),            // 45: scql.pb.InviteToProjectRequest
	(*InviteToProjectResponse)(nil),           // 46: scql.pb.InviteToProjectResponse
	(*ReplyInvitationRequest)(nil),            // 47: scql.pb.ReplyInvitationRequest
	(*ReplyInvitationResponse)(nil),           // 48: scql.pb.ReplyInvitationResponse
	(*SyncInfoRequest)(nil),                   // 49: scql.pb.SyncInfoRequest
	(*ChangeEntry)(nil),                       // 50: scql.pb.ChangeEntry
	(*SyncInfoResponse)(nil),                  // 51: scql.pb.SyncInfoResponse
	(*AskInfoRequest)(nil),                    // 52: scql.pb.AskInfoRequest
	(*ResourceSpec)(nil),                      // 53: scql.pb.ResourceSpec
	(*AskInfoResponse)(nil),                   // 54: scql.pb.AskInfoResponse
	(*Checksum)(nil),                          // 55: scql.pb.Checksum
	(*ExchangeJobInfoRequest)(nil),            // 56: scql.pb.ExchangeJobInfoRequest
	(*ExchangeJobInfoResponse)(nil),           // 57: scql.pb.ExchangeJobInfoResponse
	(*TableMeta)(nil),                         // 58: scql.pb.TableMeta
	(*PrivacyPolicy)(nil),                     // 59: scql.pb.PrivacyPolicy
	(*ColumnControl)(nil),                     // 60: scql.pb.ColumnControl
	(*ColumnDef)(nil),                         // 61: scql.pb.ColumnDef
	(*CreateTableRequest_ColumnDesc)(nil),     // 62: scql.pb.CreateTableRequest.ColumnDesc
	(*TableMeta_Column)(nil),                  // 63: scql.pb.TableMeta.Column
	(*RequestHeader)(nil),                     // 64: scql.pb.RequestHeader
	(*Status)(nil),                            // 65: scql.pb.Status
	(*SQLWarning)(nil),                        // 66: scql.pb.SQLWarning
	(*Tensor)(nil),                            // 67: scql.pb.Tensor
	(*spu.RuntimeConfig)(nil),                 // 68: spu.RuntimeConfig
	(*PartyId)(nil),                           // 69: scql.pb.PartyId
}
var file_api_broker_proto_depIdxs = []int32{
	64, // 0: scql.pb.QueryRequest.header:type_name -> scql.pb.RequestHeader
	65, // 1: scql.pb.QueryResponse.status:type_name -> scql.pb.Status
	66, // 2: scql.pb.QueryResponse.warnings:type_name -> scql.pb.SQLWarning
	67, // 3: scql.pb.QueryResponse.out_columns:type_name -> scql.pb.Tensor
	65, // 4: scql.pb.SubmitResponse.status:type_name -> scql.pb.Status
	38, // 5: scql.pb.CreateProjectRequest.conf:type_name -> scql.pb.ProjectConfig
	65, // 6: scql.pb.CreateProjectResponse.status:type_name -> scql.pb.Status
	38, // 7: scql.pb.UpdateProjectRequest.conf:type_name -> scql.pb.ProjectConfig
	65, // 8: scql.pb.UpdateProjectResponse.status:type_name -> scql.pb.Status
	65, // 9: scql.pb.ListProjectsResponse.status:type_name -> scql.pb.Status
	18, // 10: scql.pb.ListProjectsResponse.projects:type_name -> scql.pb.ProjectDesc
	38, // 11: scql.pb.ProjectDesc.conf:type_name -> scql.pb.ProjectConfig
	65, // 12: scql.pb.ArchiveProjectResponse.status:type_name -> scql.pb.Status
	65, // 13: scql.pb.ListInvitationsResponse.status:type_name -> scql.pb.Status
	25, // 14: scql.pb.ListInvitationsResponse.invitations:type_name -> scql.pb.ProjectInvitation
	0,  // 15: scql.pb.ProcessInvitationRequest.respond:type_name -> scql.pb.InvitationRespond
	65, // 16: scql.pb.ProcessInvitationResponse.status:type_name -> scql.pb.Status
	18, // 17: scql.pb.ProjectInvitation.project:type_name -> scql.pb.ProjectDesc
	1,  // 18: scql.pb.ProjectInvitation.status:type_name -> scql.pb.InvitationStatus
	62, // 19: scql.pb.CreateTableRequest.columns:type_name -> scql.pb.CreateTableRequest.ColumnDesc
	65, // 20: scql.pb.CreateTableResponse.status:type_name -> scql.pb.Status
	65, // 21: scql.pb.ListTablesResponse.status:type_name -> scql.pb.Status
	58, // 22: scql.pb.ListTablesResponse.tables:type_name -> scql.pb.TableMeta
	65, // 23: scql.pb.DropTableResponse.status:type_name -> scql.pb.Status
	60, // 24: scql.pb.GrantCCLRequest.column_control_list:type_name -> scql.pb.ColumnControl
	65, // 25: scql.pb.GrantCCLResponse.status:type_name -> scql.pb.Status
	60, // 26: scql.pb.RevokeCCLRequest.column_control_list:type_name -> scql.pb.ColumnControl
	65, // 27: scql.pb.RevokeCCLResponse.status:type_name -> scql.pb.Status
	65, // 28: scql.pb.ShowCCLResponse.status:type_name -> scql.pb.Status
	60, // 29: scql.pb.ShowCCLResponse.column_control_list:type_name -> scql.pb.ColumnControl
	68, // 30: scql.pb.ProjectConfig.spu_runtime_cfg:type_name -> spu.RuntimeConfig
	5,  // 31: scql.pb.InviteMemberRequest.method:type_name -> scql.pb.InviteMemberRequest.InvitationMethod
	65, // 32: scql.pb.InviteMemberResponse.status:type_name -> scql.pb.Status
	64, // 33: scql.pb.DistributeQueryRequest.header:type_name -> scql.pb.RequestHeader
	3,  // 34: scql.pb.DistributeQueryRequest.client_protocol:type_name -> scql.pb.BrokerProtocolVersion
	69, // 35: scql.pb.DistributeQueryRequest.client_id:type_name -> scql.pb.PartyId
	55, // 36: scql.pb.DistributeQueryRequest.client_checksum:type_name -> scql.pb.Checksum
	55, // 37: scql.pb.DistributeQueryRequest.server_checksum:type_name -> scql.pb.Checksum
	65, // 38: scql.pb.DistributeQueryResponse.status:type_name -> scql.pb.Status
	3,  // 39: scql.pb.DistributeQueryResponse.server_protocol:type_name -> scql.pb.BrokerProtocolVersion
	2,  // 40: scql.pb.DistributeQueryResponse.client_checksum_result:type_name -> scql.pb.ChecksumCompareResult
	2,  // 41: scql.pb.DistributeQueryResponse.server_checksum_result:type_name -> scql.pb.ChecksumCompareResult
	55, // 42: scql.pb.DistributeQueryResponse.expected_server_checksum:type_name -> scql.pb.Checksum
	69, // 43: scql.pb.CancelQueryRequest.client_id:type_name -> scql.pb.PartyId
	65, // 44: scql.pb.CancelQueryResponse.status:type_name -> scql.pb.Status
	69, // 45: scql.pb.InviteToProjectRequest.client_id:type_name -> scql.pb.PartyId
	18, // 46: scql.pb.InviteToProjectRequest.project:type_name -> scql.pb.ProjectDesc
	65, // 47: scql.pb.InviteToProjectResponse.status:type_name -> scql.pb.Status
	69, // 48: scql.pb.ReplyInvitationRequest.client_id:type_name -> scql.pb.PartyId
	0,  // 49: scql.pb.ReplyInvitationRequest.respond:type_name -> scql.pb.InvitationRespond
	65, // 50: scql.pb.ReplyInvitationResponse.status:type_name -> scql.pb.Status
	69, // 51: scql.pb.SyncInfoRequest.client_id:type_name -> scql.pb.PartyId
	50, // 52: scql.pb.SyncInfoRequest.change_entry:type_name -> scql.pb.ChangeEntry
	6,  // 53: scql.pb.ChangeEntry.action:type_name -> scql.pb.ChangeEntry.Action
	65, // 54: scql.pb.SyncInfoResponse.status:type_name -> scql.pb.Status
	69, // 55: scql.pb.AskInfoRequest.client_id:type_name -> scql.pb.PartyId
	53, // 56: scql.pb.AskInfoRequest.resource_specs:type_name -> scql.pb.ResourceSpec
	7,  // 57: scql.pb.ResourceSpec.kind:type_name -> scql.pb.ResourceSpec.ResourceKind
	65, // 58: scql.pb.AskInfoResponse.status:type_name -> scql.pb.Status
	69, // 59: scql.pb.ExchangeJobInfoRequest.client_id:type_name -> scql.pb.PartyId
	55, // 60: scql.pb.ExchangeJobInfoRequest.server_checksum:type_name -> scql.pb.Checksum
	65, // 61: scql.pb.ExchangeJobInfoResponse.status:type_name -> scql.pb.Status
	2,  // 62: scql.pb.ExchangeJobInfoResponse.server_checksum_result:type_name -> scql.pb.ChecksumCompareResult
	55, // 63: scql.pb.ExchangeJobInfoResponse.expected_server_checksum:type_name -> scql.pb.Checksum
	63, // 64: scql.pb.TableMeta.columns:type_name -> scql.pb.TableMeta.Column
	60, // 65: scql.pb.PrivacyPolicy.column_control_list:type_name -> scql.pb.ColumnControl
	61, // 66: scql.pb.ColumnControl.col:type_name -> scql.pb.ColumnDef
	4,  // 67: scql.pb.ColumnControl.constraint:type_name -> scql.pb.Constraint
	8,  // 68: scql.pb.IntraBrokerService.DoQuery:input_type -> scql.pb.QueryRequest
	8,  // 69: scql.pb.IntraBrokerService.SubmitQuery:input_type -> scql.pb.QueryRequest
	11, // 70: scql.pb.IntraBrokerService.FetchResult:input_type -> scql.pb.FetchResultRequest
	12, // 71: scql.pb.IntraBrokerService.CreateProject:input_type -> scql.pb.CreateProjectRequest
	14, // 72: scql.pb.IntraBrokerService.UpdateProject:input_type -> scql.pb.UpdateProjectRequest
	16, // 73: scql.pb.IntraBrokerService.ListProjects:input_type -> scql.pb.ListProjectsRequest
	19, // 74: scql.pb.IntraBrokerService.ArchiveProject:input_type -> scql.pb.ArchiveProjectRequest
	39, // 75: scql.pb.IntraBrokerService.InviteMember:input_type -> scql.pb.InviteMemberRequest
	21, // 76: scql.pb.IntraBrokerService.ListInvitations:input_type -> scql.pb.ListInvitationsRequest
	23, // 77: scql.pb.IntraBrokerService.ProcessInvitation:input_type -> scql.pb.ProcessInvitationRequest
	26, // 78: scql.pb.IntraBrokerService.CreateTable:input_type -> scql.pb.CreateTableRequest
	28, // 79: scql.pb.IntraBrokerService.ListTables:input_type -> scql.pb.ListTablesRequest
	30, // 80: scql.pb.IntraBrokerService.DropTable:input_type -> scql.pb.DropTableRequest
	32, // 81: scql.pb.IntraBrokerService.GrantCCL:input_type -> scql.pb.GrantCCLRequest
	34, // 82: scql.pb.IntraBrokerService.RevokeCCL:input_type -> scql.pb.RevokeCCLRequest
	36, // 83: scql.pb.IntraBrokerService.ShowCCL:input_type -> scql.pb.ShowCCLRequest
	41, // 84: scql.pb.InterBrokerService.DistributeQuery:input_type -> scql.pb.DistributeQueryRequest
	43, // 85: scql.pb.InterBrokerService.CancelQuery:input_type -> scql.pb.CancelQueryRequest
	45, // 86: scql.pb.InterBrokerService.InviteToProject:input_type -> scql.pb.InviteToProjectRequest
	47, // 87: scql.pb.InterBrokerService.ReplyInvitation:input_type -> scql.pb.ReplyInvitationRequest
	49, // 88: scql.pb.InterBrokerService.SyncInfo:input_type -> scql.pb.SyncInfoRequest
	52, // 89: scql.pb.InterBrokerService.AskInfo:input_type -> scql.pb.AskInfoRequest
	56, // 90: scql.pb.InterBrokerService.ExchangeJobInfo:input_type -> scql.pb.ExchangeJobInfoRequest
	9,  // 91: scql.pb.IntraBrokerService.DoQuery:output_type -> scql.pb.QueryResponse
	10, // 92: scql.pb.IntraBrokerService.SubmitQuery:output_type -> scql.pb.SubmitResponse
	9,  // 93: scql.pb.IntraBrokerService.FetchResult:output_type -> scql.pb.QueryResponse
	13, // 94: scql.pb.IntraBrokerService.CreateProject:output_type -> scql.pb.CreateProjectResponse
	15, // 95: scql.pb.IntraBrokerService.UpdateProject:output_type -> scql.pb.UpdateProjectResponse
	17, // 96: scql.pb.IntraBrokerService.ListProjects:output_type -> scql.pb.ListProjectsResponse
	20, // 97: scql.pb.IntraBrokerService.ArchiveProject:output_type -> scql.pb.ArchiveProjectResponse
	40, // 98: scql.pb.IntraBrokerService.InviteMember:output_type -> scql.pb.InviteMemberResponse
	22, // 99: scql.pb.IntraBrokerService.ListInvitations:output_type -> scql.pb.ListInvitationsResponse
	24, // 100: scql.pb.IntraBrokerService.ProcessInvitation:output_type -> scql.pb.ProcessInvitationResponse
	27, // 101: scql.pb.IntraBrokerService.CreateTable:output_type -> scql.pb.CreateTableResponse
	29, // 102: scql.pb.IntraBrokerService.ListTables:output_type -> scql.pb.ListTablesResponse
	31, // 103: scql.pb.IntraBrokerService.DropTable:output_type -> scql.pb.DropTableResponse
	33, // 104: scql.pb.IntraBrokerService.GrantCCL:output_type -> scql.pb.GrantCCLResponse
	35, // 105: scql.pb.IntraBrokerService.RevokeCCL:output_type -> scql.pb.RevokeCCLResponse
	37, // 106: scql.pb.IntraBrokerService.ShowCCL:output_type -> scql.pb.ShowCCLResponse
	42, // 107: scql.pb.InterBrokerService.DistributeQuery:output_type -> scql.pb.DistributeQueryResponse
	44, // 108: scql.pb.InterBrokerService.CancelQuery:output_type -> scql.pb.CancelQueryResponse
	46, // 109: scql.pb.InterBrokerService.InviteToProject:output_type -> scql.pb.InviteToProjectResponse
	48, // 110: scql.pb.InterBrokerService.ReplyInvitation:output_type -> scql.pb.ReplyInvitationResponse
	51, // 111: scql.pb.InterBrokerService.SyncInfo:output_type -> scql.pb.SyncInfoResponse
	54, // 112: scql.pb.InterBrokerService.AskInfo:output_type -> scql.pb.AskInfoResponse
	57, // 113: scql.pb.InterBrokerService.ExchangeJobInfo:output_type -> scql.pb.ExchangeJobInfoResponse
	91, // [91:114] is the sub-list for method output_type
	68, // [68:91] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_api_broker_proto_init() }
func file_api_broker_proto_init() {
	if File_api_broker_proto != nil {
		return
	}
	file_api_common_proto_init()
	file_api_status_proto_init()
	file_api_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantCCLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantCCLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCCLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCCLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowCCLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowCCLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteToProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteToProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checksum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeJobInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeJobInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivacyPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest_ColumnDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_broker_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMeta_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_broker_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_broker_proto_goTypes,
		DependencyIndexes: file_api_broker_proto_depIdxs,
		EnumInfos:         file_api_broker_proto_enumTypes,
		MessageInfos:      file_api_broker_proto_msgTypes,
	}.Build()
	File_api_broker_proto = out.File
	file_api_broker_proto_rawDesc = nil
	file_api_broker_proto_goTypes = nil
	file_api_broker_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IntraBrokerServiceClient is the client API for IntraBrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntraBrokerServiceClient interface {
	DoQuery(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	SubmitQuery(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*SubmitResponse, error)
	FetchResult(ctx context.Context, in *FetchResultRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	ArchiveProject(ctx context.Context, in *ArchiveProjectRequest, opts ...grpc.CallOption) (*ArchiveProjectResponse, error)
	InviteMember(ctx context.Context, in *InviteMemberRequest, opts ...grpc.CallOption) (*InviteMemberResponse, error)
	ListInvitations(ctx context.Context, in *ListInvitationsRequest, opts ...grpc.CallOption) (*ListInvitationsResponse, error)
	ProcessInvitation(ctx context.Context, in *ProcessInvitationRequest, opts ...grpc.CallOption) (*ProcessInvitationResponse, error)
	CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*CreateTableResponse, error)
	ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error)
	DropTable(ctx context.Context, in *DropTableRequest, opts ...grpc.CallOption) (*DropTableResponse, error)
	GrantCCL(ctx context.Context, in *GrantCCLRequest, opts ...grpc.CallOption) (*GrantCCLResponse, error)
	RevokeCCL(ctx context.Context, in *RevokeCCLRequest, opts ...grpc.CallOption) (*RevokeCCLResponse, error)
	ShowCCL(ctx context.Context, in *ShowCCLRequest, opts ...grpc.CallOption) (*ShowCCLResponse, error)
}

type intraBrokerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIntraBrokerServiceClient(cc grpc.ClientConnInterface) IntraBrokerServiceClient {
	return &intraBrokerServiceClient{cc}
}

func (c *intraBrokerServiceClient) DoQuery(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/DoQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) SubmitQuery(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*SubmitResponse, error) {
	out := new(SubmitResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/SubmitQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) FetchResult(ctx context.Context, in *FetchResultRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/FetchResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	out := new(UpdateProjectResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ArchiveProject(ctx context.Context, in *ArchiveProjectRequest, opts ...grpc.CallOption) (*ArchiveProjectResponse, error) {
	out := new(ArchiveProjectResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ArchiveProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) InviteMember(ctx context.Context, in *InviteMemberRequest, opts ...grpc.CallOption) (*InviteMemberResponse, error) {
	out := new(InviteMemberResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/InviteMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ListInvitations(ctx context.Context, in *ListInvitationsRequest, opts ...grpc.CallOption) (*ListInvitationsResponse, error) {
	out := new(ListInvitationsResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ListInvitations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ProcessInvitation(ctx context.Context, in *ProcessInvitationRequest, opts ...grpc.CallOption) (*ProcessInvitationResponse, error) {
	out := new(ProcessInvitationResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ProcessInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*CreateTableResponse, error) {
	out := new(CreateTableResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/CreateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ListTables(ctx context.Context, in *ListTablesRequest, opts ...grpc.CallOption) (*ListTablesResponse, error) {
	out := new(ListTablesResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ListTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) DropTable(ctx context.Context, in *DropTableRequest, opts ...grpc.CallOption) (*DropTableResponse, error) {
	out := new(DropTableResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/DropTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) GrantCCL(ctx context.Context, in *GrantCCLRequest, opts ...grpc.CallOption) (*GrantCCLResponse, error) {
	out := new(GrantCCLResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/GrantCCL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) RevokeCCL(ctx context.Context, in *RevokeCCLRequest, opts ...grpc.CallOption) (*RevokeCCLResponse, error) {
	out := new(RevokeCCLResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/RevokeCCL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intraBrokerServiceClient) ShowCCL(ctx context.Context, in *ShowCCLRequest, opts ...grpc.CallOption) (*ShowCCLResponse, error) {
	out := new(ShowCCLResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.IntraBrokerService/ShowCCL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IntraBrokerServiceServer is the server API for IntraBrokerService service.
type IntraBrokerServiceServer interface {
	DoQuery(context.Context, *QueryRequest) (*QueryResponse, error)
	SubmitQuery(context.Context, *QueryRequest) (*SubmitResponse, error)
	FetchResult(context.Context, *FetchResultRequest) (*QueryResponse, error)
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error)
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	ArchiveProject(context.Context, *ArchiveProjectRequest) (*ArchiveProjectResponse, error)
	InviteMember(context.Context, *InviteMemberRequest) (*InviteMemberResponse, error)
	ListInvitations(context.Context, *ListInvitationsRequest) (*ListInvitationsResponse, error)
	ProcessInvitation(context.Context, *ProcessInvitationRequest) (*ProcessInvitationResponse, error)
	CreateTable(context.Context, *CreateTableRequest) (*CreateTableResponse, error)
	ListTables(context.Context, *ListTablesRequest) (*ListTablesResponse, error)
	DropTable(context.Context, *DropTableRequest) (*DropTableResponse, error)
	GrantCCL(context.Context, *GrantCCLRequest) (*GrantCCLResponse, error)
	RevokeCCL(context.Context, *RevokeCCLRequest) (*RevokeCCLResponse, error)
	ShowCCL(context.Context, *ShowCCLRequest) (*ShowCCLResponse, error)
}

// UnimplementedIntraBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIntraBrokerServiceServer struct {
}

func (*UnimplementedIntraBrokerServiceServer) DoQuery(context.Context, *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoQuery not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) SubmitQuery(context.Context, *QueryRequest) (*SubmitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitQuery not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) FetchResult(context.Context, *FetchResultRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchResult not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) UpdateProject(context.Context, *UpdateProjectRequest) (*UpdateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ArchiveProject(context.Context, *ArchiveProjectRequest) (*ArchiveProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveProject not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) InviteMember(context.Context, *InviteMemberRequest) (*InviteMemberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteMember not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ListInvitations(context.Context, *ListInvitationsRequest) (*ListInvitationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInvitations not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ProcessInvitation(context.Context, *ProcessInvitationRequest) (*ProcessInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessInvitation not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) CreateTable(context.Context, *CreateTableRequest) (*CreateTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTable not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ListTables(context.Context, *ListTablesRequest) (*ListTablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTables not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) DropTable(context.Context, *DropTableRequest) (*DropTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropTable not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) GrantCCL(context.Context, *GrantCCLRequest) (*GrantCCLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantCCL not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) RevokeCCL(context.Context, *RevokeCCLRequest) (*RevokeCCLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeCCL not implemented")
}
func (*UnimplementedIntraBrokerServiceServer) ShowCCL(context.Context, *ShowCCLRequest) (*ShowCCLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowCCL not implemented")
}

func RegisterIntraBrokerServiceServer(s *grpc.Server, srv IntraBrokerServiceServer) {
	s.RegisterService(&_IntraBrokerService_serviceDesc, srv)
}

func _IntraBrokerService_DoQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).DoQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/DoQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).DoQuery(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_SubmitQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).SubmitQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/SubmitQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).SubmitQuery(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_FetchResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).FetchResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/FetchResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).FetchResult(ctx, req.(*FetchResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).UpdateProject(ctx, req.(*UpdateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ArchiveProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ArchiveProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ArchiveProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ArchiveProject(ctx, req.(*ArchiveProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_InviteMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteMemberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).InviteMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/InviteMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).InviteMember(ctx, req.(*InviteMemberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ListInvitations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInvitationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ListInvitations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ListInvitations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ListInvitations(ctx, req.(*ListInvitationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ProcessInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ProcessInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ProcessInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ProcessInvitation(ctx, req.(*ProcessInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/CreateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).CreateTable(ctx, req.(*CreateTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ListTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ListTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ListTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ListTables(ctx, req.(*ListTablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_DropTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).DropTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/DropTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).DropTable(ctx, req.(*DropTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_GrantCCL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantCCLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).GrantCCL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/GrantCCL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).GrantCCL(ctx, req.(*GrantCCLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_RevokeCCL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeCCLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).RevokeCCL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/RevokeCCL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).RevokeCCL(ctx, req.(*RevokeCCLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntraBrokerService_ShowCCL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowCCLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntraBrokerServiceServer).ShowCCL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.IntraBrokerService/ShowCCL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntraBrokerServiceServer).ShowCCL(ctx, req.(*ShowCCLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IntraBrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scql.pb.IntraBrokerService",
	HandlerType: (*IntraBrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoQuery",
			Handler:    _IntraBrokerService_DoQuery_Handler,
		},
		{
			MethodName: "SubmitQuery",
			Handler:    _IntraBrokerService_SubmitQuery_Handler,
		},
		{
			MethodName: "FetchResult",
			Handler:    _IntraBrokerService_FetchResult_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _IntraBrokerService_CreateProject_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _IntraBrokerService_UpdateProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _IntraBrokerService_ListProjects_Handler,
		},
		{
			MethodName: "ArchiveProject",
			Handler:    _IntraBrokerService_ArchiveProject_Handler,
		},
		{
			MethodName: "InviteMember",
			Handler:    _IntraBrokerService_InviteMember_Handler,
		},
		{
			MethodName: "ListInvitations",
			Handler:    _IntraBrokerService_ListInvitations_Handler,
		},
		{
			MethodName: "ProcessInvitation",
			Handler:    _IntraBrokerService_ProcessInvitation_Handler,
		},
		{
			MethodName: "CreateTable",
			Handler:    _IntraBrokerService_CreateTable_Handler,
		},
		{
			MethodName: "ListTables",
			Handler:    _IntraBrokerService_ListTables_Handler,
		},
		{
			MethodName: "DropTable",
			Handler:    _IntraBrokerService_DropTable_Handler,
		},
		{
			MethodName: "GrantCCL",
			Handler:    _IntraBrokerService_GrantCCL_Handler,
		},
		{
			MethodName: "RevokeCCL",
			Handler:    _IntraBrokerService_RevokeCCL_Handler,
		},
		{
			MethodName: "ShowCCL",
			Handler:    _IntraBrokerService_ShowCCL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/broker.proto",
}

// InterBrokerServiceClient is the client API for InterBrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InterBrokerServiceClient interface {
	DistributeQuery(ctx context.Context, in *DistributeQueryRequest, opts ...grpc.CallOption) (*DistributeQueryResponse, error)
	CancelQuery(ctx context.Context, in *CancelQueryRequest, opts ...grpc.CallOption) (*CancelQueryResponse, error)
	InviteToProject(ctx context.Context, in *InviteToProjectRequest, opts ...grpc.CallOption) (*InviteToProjectResponse, error)
	ReplyInvitation(ctx context.Context, in *ReplyInvitationRequest, opts ...grpc.CallOption) (*ReplyInvitationResponse, error)
	SyncInfo(ctx context.Context, in *SyncInfoRequest, opts ...grpc.CallOption) (*SyncInfoResponse, error)
	AskInfo(ctx context.Context, in *AskInfoRequest, opts ...grpc.CallOption) (*AskInfoResponse, error)
	ExchangeJobInfo(ctx context.Context, in *ExchangeJobInfoRequest, opts ...grpc.CallOption) (*ExchangeJobInfoResponse, error)
}

type interBrokerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInterBrokerServiceClient(cc grpc.ClientConnInterface) InterBrokerServiceClient {
	return &interBrokerServiceClient{cc}
}

func (c *interBrokerServiceClient) DistributeQuery(ctx context.Context, in *DistributeQueryRequest, opts ...grpc.CallOption) (*DistributeQueryResponse, error) {
	out := new(DistributeQueryResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/DistributeQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) CancelQuery(ctx context.Context, in *CancelQueryRequest, opts ...grpc.CallOption) (*CancelQueryResponse, error) {
	out := new(CancelQueryResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/CancelQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) InviteToProject(ctx context.Context, in *InviteToProjectRequest, opts ...grpc.CallOption) (*InviteToProjectResponse, error) {
	out := new(InviteToProjectResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/InviteToProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) ReplyInvitation(ctx context.Context, in *ReplyInvitationRequest, opts ...grpc.CallOption) (*ReplyInvitationResponse, error) {
	out := new(ReplyInvitationResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/ReplyInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) SyncInfo(ctx context.Context, in *SyncInfoRequest, opts ...grpc.CallOption) (*SyncInfoResponse, error) {
	out := new(SyncInfoResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/SyncInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) AskInfo(ctx context.Context, in *AskInfoRequest, opts ...grpc.CallOption) (*AskInfoResponse, error) {
	out := new(AskInfoResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/AskInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interBrokerServiceClient) ExchangeJobInfo(ctx context.Context, in *ExchangeJobInfoRequest, opts ...grpc.CallOption) (*ExchangeJobInfoResponse, error) {
	out := new(ExchangeJobInfoResponse)
	err := c.cc.Invoke(ctx, "/scql.pb.InterBrokerService/ExchangeJobInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InterBrokerServiceServer is the server API for InterBrokerService service.
type InterBrokerServiceServer interface {
	DistributeQuery(context.Context, *DistributeQueryRequest) (*DistributeQueryResponse, error)
	CancelQuery(context.Context, *CancelQueryRequest) (*CancelQueryResponse, error)
	InviteToProject(context.Context, *InviteToProjectRequest) (*InviteToProjectResponse, error)
	ReplyInvitation(context.Context, *ReplyInvitationRequest) (*ReplyInvitationResponse, error)
	SyncInfo(context.Context, *SyncInfoRequest) (*SyncInfoResponse, error)
	AskInfo(context.Context, *AskInfoRequest) (*AskInfoResponse, error)
	ExchangeJobInfo(context.Context, *ExchangeJobInfoRequest) (*ExchangeJobInfoResponse, error)
}

// UnimplementedInterBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInterBrokerServiceServer struct {
}

func (*UnimplementedInterBrokerServiceServer) DistributeQuery(context.Context, *DistributeQueryRequest) (*DistributeQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeQuery not implemented")
}
func (*UnimplementedInterBrokerServiceServer) CancelQuery(context.Context, *CancelQueryRequest) (*CancelQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelQuery not implemented")
}
func (*UnimplementedInterBrokerServiceServer) InviteToProject(context.Context, *InviteToProjectRequest) (*InviteToProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteToProject not implemented")
}
func (*UnimplementedInterBrokerServiceServer) ReplyInvitation(context.Context, *ReplyInvitationRequest) (*ReplyInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplyInvitation not implemented")
}
func (*UnimplementedInterBrokerServiceServer) SyncInfo(context.Context, *SyncInfoRequest) (*SyncInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncInfo not implemented")
}
func (*UnimplementedInterBrokerServiceServer) AskInfo(context.Context, *AskInfoRequest) (*AskInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AskInfo not implemented")
}
func (*UnimplementedInterBrokerServiceServer) ExchangeJobInfo(context.Context, *ExchangeJobInfoRequest) (*ExchangeJobInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeJobInfo not implemented")
}

func RegisterInterBrokerServiceServer(s *grpc.Server, srv InterBrokerServiceServer) {
	s.RegisterService(&_InterBrokerService_serviceDesc, srv)
}

func _InterBrokerService_DistributeQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributeQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).DistributeQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/DistributeQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).DistributeQuery(ctx, req.(*DistributeQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_CancelQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).CancelQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/CancelQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).CancelQuery(ctx, req.(*CancelQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_InviteToProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteToProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).InviteToProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/InviteToProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).InviteToProject(ctx, req.(*InviteToProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_ReplyInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).ReplyInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/ReplyInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).ReplyInvitation(ctx, req.(*ReplyInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_SyncInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).SyncInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/SyncInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).SyncInfo(ctx, req.(*SyncInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_AskInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AskInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).AskInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/AskInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).AskInfo(ctx, req.(*AskInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InterBrokerService_ExchangeJobInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeJobInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InterBrokerServiceServer).ExchangeJobInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scql.pb.InterBrokerService/ExchangeJobInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InterBrokerServiceServer).ExchangeJobInfo(ctx, req.(*ExchangeJobInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InterBrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scql.pb.InterBrokerService",
	HandlerType: (*InterBrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DistributeQuery",
			Handler:    _InterBrokerService_DistributeQuery_Handler,
		},
		{
			MethodName: "CancelQuery",
			Handler:    _InterBrokerService_CancelQuery_Handler,
		},
		{
			MethodName: "InviteToProject",
			Handler:    _InterBrokerService_InviteToProject_Handler,
		},
		{
			MethodName: "ReplyInvitation",
			Handler:    _InterBrokerService_ReplyInvitation_Handler,
		},
		{
			MethodName: "SyncInfo",
			Handler:    _InterBrokerService_SyncInfo_Handler,
		},
		{
			MethodName: "AskInfo",
			Handler:    _InterBrokerService_AskInfo_Handler,
		},
		{
			MethodName: "ExchangeJobInfo",
			Handler:    _InterBrokerService_ExchangeJobInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/broker.proto",
}
