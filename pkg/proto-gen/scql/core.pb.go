// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: api/core.proto

package scql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrimitiveDataType int32

const (
	PrimitiveDataType_PrimitiveDataType_UNDEFINED PrimitiveDataType = 0
	PrimitiveDataType_INT8                        PrimitiveDataType = 1
	PrimitiveDataType_INT16                       PrimitiveDataType = 2
	PrimitiveDataType_INT32                       PrimitiveDataType = 3
	PrimitiveDataType_INT64                       PrimitiveDataType = 4
	PrimitiveDataType_FLOAT32                     PrimitiveDataType = 5
	PrimitiveDataType_FLOAT64                     PrimitiveDataType = 6
	PrimitiveDataType_BOOL                        PrimitiveDataType = 7
	PrimitiveDataType_STRING                      PrimitiveDataType = 8
	PrimitiveDataType_DATETIME                    PrimitiveDataType = 9
	PrimitiveDataType_TIMESTAMP                   PrimitiveDataType = 10
)

// Enum value maps for PrimitiveDataType.
var (
	PrimitiveDataType_name = map[int32]string{
		0:  "PrimitiveDataType_UNDEFINED",
		1:  "INT8",
		2:  "INT16",
		3:  "INT32",
		4:  "INT64",
		5:  "FLOAT32",
		6:  "FLOAT64",
		7:  "BOOL",
		8:  "STRING",
		9:  "DATETIME",
		10: "TIMESTAMP",
	}
	PrimitiveDataType_value = map[string]int32{
		"PrimitiveDataType_UNDEFINED": 0,
		"INT8":                        1,
		"INT16":                       2,
		"INT32":                       3,
		"INT64":                       4,
		"FLOAT32":                     5,
		"FLOAT64":                     6,
		"BOOL":                        7,
		"STRING":                      8,
		"DATETIME":                    9,
		"TIMESTAMP":                   10,
	}
)

func (x PrimitiveDataType) Enum() *PrimitiveDataType {
	p := new(PrimitiveDataType)
	*p = x
	return p
}

func (x PrimitiveDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_proto_enumTypes[0].Descriptor()
}

func (PrimitiveDataType) Type() protoreflect.EnumType {
	return &file_api_core_proto_enumTypes[0]
}

func (x PrimitiveDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveDataType.Descriptor instead.
func (PrimitiveDataType) EnumDescriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{0}
}

type TensorOptions int32

const (
	TensorOptions_VALUE     TensorOptions = 0
	TensorOptions_REFERENCE TensorOptions = 1
	TensorOptions_VARIABLE  TensorOptions = 2
)

// Enum value maps for TensorOptions.
var (
	TensorOptions_name = map[int32]string{
		0: "VALUE",
		1: "REFERENCE",
		2: "VARIABLE",
	}
	TensorOptions_value = map[string]int32{
		"VALUE":     0,
		"REFERENCE": 1,
		"VARIABLE":  2,
	}
)

func (x TensorOptions) Enum() *TensorOptions {
	p := new(TensorOptions)
	*p = x
	return p
}

func (x TensorOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TensorOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_proto_enumTypes[1].Descriptor()
}

func (TensorOptions) Type() protoreflect.EnumType {
	return &file_api_core_proto_enumTypes[1]
}

func (x TensorOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TensorOptions.Descriptor instead.
func (TensorOptions) EnumDescriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{1}
}

type TensorStatus int32

const (
	TensorStatus_TENSORSTATUS_UNKNOWN TensorStatus = 0
	TensorStatus_TENSORSTATUS_PRIVATE TensorStatus = 1
	TensorStatus_TENSORSTATUS_SECRET  TensorStatus = 2
	TensorStatus_TENSORSTATUS_CIPHER  TensorStatus = 3
	TensorStatus_TENSORSTATUS_PUBLIC  TensorStatus = 4
)

// Enum value maps for TensorStatus.
var (
	TensorStatus_name = map[int32]string{
		0: "TENSORSTATUS_UNKNOWN",
		1: "TENSORSTATUS_PRIVATE",
		2: "TENSORSTATUS_SECRET",
		3: "TENSORSTATUS_CIPHER",
		4: "TENSORSTATUS_PUBLIC",
	}
	TensorStatus_value = map[string]int32{
		"TENSORSTATUS_UNKNOWN": 0,
		"TENSORSTATUS_PRIVATE": 1,
		"TENSORSTATUS_SECRET":  2,
		"TENSORSTATUS_CIPHER":  3,
		"TENSORSTATUS_PUBLIC":  4,
	}
)

func (x TensorStatus) Enum() *TensorStatus {
	p := new(TensorStatus)
	*p = x
	return p
}

func (x TensorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TensorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_proto_enumTypes[2].Descriptor()
}

func (TensorStatus) Type() protoreflect.EnumType {
	return &file_api_core_proto_enumTypes[2]
}

func (x TensorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TensorStatus.Descriptor instead.
func (TensorStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{2}
}

type FormalParameterOptions int32

const (
	FormalParameterOptions_FORMALPARAMETEROPTIONS_UNDEFINED FormalParameterOptions = 0
	FormalParameterOptions_FORMALPARAMETEROPTIONS_SINGLE    FormalParameterOptions = 1
	FormalParameterOptions_FORMALPARAMETEROPTIONS_OPTIONAL  FormalParameterOptions = 2
	FormalParameterOptions_FORMALPARAMETEROPTIONS_VARIADIC  FormalParameterOptions = 3
)

// Enum value maps for FormalParameterOptions.
var (
	FormalParameterOptions_name = map[int32]string{
		0: "FORMALPARAMETEROPTIONS_UNDEFINED",
		1: "FORMALPARAMETEROPTIONS_SINGLE",
		2: "FORMALPARAMETEROPTIONS_OPTIONAL",
		3: "FORMALPARAMETEROPTIONS_VARIADIC",
	}
	FormalParameterOptions_value = map[string]int32{
		"FORMALPARAMETEROPTIONS_UNDEFINED": 0,
		"FORMALPARAMETEROPTIONS_SINGLE":    1,
		"FORMALPARAMETEROPTIONS_OPTIONAL":  2,
		"FORMALPARAMETEROPTIONS_VARIADIC":  3,
	}
)

func (x FormalParameterOptions) Enum() *FormalParameterOptions {
	p := new(FormalParameterOptions)
	*p = x
	return p
}

func (x FormalParameterOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FormalParameterOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_proto_enumTypes[3].Descriptor()
}

func (FormalParameterOptions) Type() protoreflect.EnumType {
	return &file_api_core_proto_enumTypes[3]
}

func (x FormalParameterOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FormalParameterOptions.Descriptor instead.
func (FormalParameterOptions) EnumDescriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{3}
}

type TensorShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dim []*TensorShape_Dimension `protobuf:"bytes,1,rep,name=dim,proto3" json:"dim,omitempty"`
}

func (x *TensorShape) Reset() {
	*x = TensorShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorShape) ProtoMessage() {}

func (x *TensorShape) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorShape.ProtoReflect.Descriptor instead.
func (*TensorShape) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{0}
}

func (x *TensorShape) GetDim() []*TensorShape_Dimension {
	if x != nil {
		return x.Dim
	}
	return nil
}

type TensorAnnotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status TensorStatus `protobuf:"varint,1,opt,name=status,proto3,enum=scql.pb.TensorStatus" json:"status,omitempty"`
}

func (x *TensorAnnotation) Reset() {
	*x = TensorAnnotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorAnnotation) ProtoMessage() {}

func (x *TensorAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorAnnotation.ProtoReflect.Descriptor instead.
func (*TensorAnnotation) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{1}
}

func (x *TensorAnnotation) GetStatus() TensorStatus {
	if x != nil {
		return x.Status
	}
	return TensorStatus_TENSORSTATUS_UNKNOWN
}

type Tensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shape      *TensorShape      `protobuf:"bytes,2,opt,name=shape,proto3" json:"shape,omitempty"`
	ElemType   PrimitiveDataType `protobuf:"varint,3,opt,name=elem_type,json=elemType,proto3,enum=scql.pb.PrimitiveDataType" json:"elem_type,omitempty"`
	Option     TensorOptions     `protobuf:"varint,4,opt,name=option,proto3,enum=scql.pb.TensorOptions" json:"option,omitempty"`
	Annotation *TensorAnnotation `protobuf:"bytes,5,opt,name=annotation,proto3" json:"annotation,omitempty"`
	Int32Data  []int32           `protobuf:"varint,6,rep,packed,name=int32_data,json=int32Data,proto3" json:"int32_data,omitempty"`
	Int64Data  []int64           `protobuf:"varint,7,rep,packed,name=int64_data,json=int64Data,proto3" json:"int64_data,omitempty"`
	FloatData  []float32         `protobuf:"fixed32,8,rep,packed,name=float_data,json=floatData,proto3" json:"float_data,omitempty"`
	DoubleData []float64         `protobuf:"fixed64,9,rep,packed,name=double_data,json=doubleData,proto3" json:"double_data,omitempty"`
	BoolData   []bool            `protobuf:"varint,10,rep,packed,name=bool_data,json=boolData,proto3" json:"bool_data,omitempty"`
	StringData []string          `protobuf:"bytes,11,rep,name=string_data,json=stringData,proto3" json:"string_data,omitempty"`
	RefNum     int32             `protobuf:"varint,12,opt,name=ref_num,json=refNum,proto3" json:"ref_num,omitempty"`
}

func (x *Tensor) Reset() {
	*x = Tensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tensor) ProtoMessage() {}

func (x *Tensor) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tensor.ProtoReflect.Descriptor instead.
func (*Tensor) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{2}
}

func (x *Tensor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tensor) GetShape() *TensorShape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *Tensor) GetElemType() PrimitiveDataType {
	if x != nil {
		return x.ElemType
	}
	return PrimitiveDataType_PrimitiveDataType_UNDEFINED
}

func (x *Tensor) GetOption() TensorOptions {
	if x != nil {
		return x.Option
	}
	return TensorOptions_VALUE
}

func (x *Tensor) GetAnnotation() *TensorAnnotation {
	if x != nil {
		return x.Annotation
	}
	return nil
}

func (x *Tensor) GetInt32Data() []int32 {
	if x != nil {
		return x.Int32Data
	}
	return nil
}

func (x *Tensor) GetInt64Data() []int64 {
	if x != nil {
		return x.Int64Data
	}
	return nil
}

func (x *Tensor) GetFloatData() []float32 {
	if x != nil {
		return x.FloatData
	}
	return nil
}

func (x *Tensor) GetDoubleData() []float64 {
	if x != nil {
		return x.DoubleData
	}
	return nil
}

func (x *Tensor) GetBoolData() []bool {
	if x != nil {
		return x.BoolData
	}
	return nil
}

func (x *Tensor) GetStringData() []string {
	if x != nil {
		return x.StringData
	}
	return nil
}

func (x *Tensor) GetRefNum() int32 {
	if x != nil {
		return x.RefNum
	}
	return 0
}

type AttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*AttributeValue_T
	Value isAttributeValue_Value `protobuf_oneof:"value"`
}

func (x *AttributeValue) Reset() {
	*x = AttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue) ProtoMessage() {}

func (x *AttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue.ProtoReflect.Descriptor instead.
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{3}
}

func (m *AttributeValue) GetValue() isAttributeValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttributeValue) GetT() *Tensor {
	if x, ok := x.GetValue().(*AttributeValue_T); ok {
		return x.T
	}
	return nil
}

type isAttributeValue_Value interface {
	isAttributeValue_Value()
}

type AttributeValue_T struct {
	T *Tensor `protobuf:"bytes,1,opt,name=t,proto3,oneof"`
}

func (*AttributeValue_T) isAttributeValue_Value() {}

type TensorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tensors []*Tensor `protobuf:"bytes,1,rep,name=tensors,proto3" json:"tensors,omitempty"`
}

func (x *TensorList) Reset() {
	*x = TensorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorList) ProtoMessage() {}

func (x *TensorList) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorList.ProtoReflect.Descriptor instead.
func (*TensorList) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{4}
}

func (x *TensorList) GetTensors() []*Tensor {
	if x != nil {
		return x.Tensors
	}
	return nil
}

type ExecNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName   string                     `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	OpType     string                     `protobuf:"bytes,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
	Inputs     map[string]*TensorList     `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Outputs    map[string]*TensorList     `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attributes map[string]*AttributeValue `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecNode) Reset() {
	*x = ExecNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecNode) ProtoMessage() {}

func (x *ExecNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecNode.ProtoReflect.Descriptor instead.
func (*ExecNode) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{5}
}

func (x *ExecNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ExecNode) GetOpType() string {
	if x != nil {
		return x.OpType
	}
	return ""
}

func (x *ExecNode) GetInputs() map[string]*TensorList {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecNode) GetOutputs() map[string]*TensorList {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ExecNode) GetAttributes() map[string]*AttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type FormalAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Definition string `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *FormalAttribute) Reset() {
	*x = FormalAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormalAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormalAttribute) ProtoMessage() {}

func (x *FormalAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormalAttribute.ProtoReflect.Descriptor instead.
func (*FormalAttribute) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{6}
}

func (x *FormalAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FormalAttribute) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

type FormalParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamName                     string                 `protobuf:"bytes,1,opt,name=param_name,json=paramName,proto3" json:"param_name,omitempty"`
	Option                        FormalParameterOptions `protobuf:"varint,2,opt,name=option,proto3,enum=scql.pb.FormalParameterOptions" json:"option,omitempty"`
	ParamShape                    *TensorShape           `protobuf:"bytes,3,opt,name=param_shape,json=paramShape,proto3" json:"param_shape,omitempty"`
	Definition                    string                 `protobuf:"bytes,4,opt,name=definition,proto3" json:"definition,omitempty"`
	ParameterStatusConstraintName string                 `protobuf:"bytes,5,opt,name=parameter_status_constraint_name,json=parameterStatusConstraintName,proto3" json:"parameter_status_constraint_name,omitempty"`
}

func (x *FormalParameter) Reset() {
	*x = FormalParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormalParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormalParameter) ProtoMessage() {}

func (x *FormalParameter) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormalParameter.ProtoReflect.Descriptor instead.
func (*FormalParameter) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{7}
}

func (x *FormalParameter) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *FormalParameter) GetOption() FormalParameterOptions {
	if x != nil {
		return x.Option
	}
	return FormalParameterOptions_FORMALPARAMETEROPTIONS_UNDEFINED
}

func (x *FormalParameter) GetParamShape() *TensorShape {
	if x != nil {
		return x.ParamShape
	}
	return nil
}

func (x *FormalParameter) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *FormalParameter) GetParameterStatusConstraintName() string {
	if x != nil {
		return x.ParameterStatusConstraintName
	}
	return ""
}

type TensorStatusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []TensorStatus `protobuf:"varint,1,rep,packed,name=status,proto3,enum=scql.pb.TensorStatus" json:"status,omitempty"`
}

func (x *TensorStatusList) Reset() {
	*x = TensorStatusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorStatusList) ProtoMessage() {}

func (x *TensorStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorStatusList.ProtoReflect.Descriptor instead.
func (*TensorStatusList) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{8}
}

func (x *TensorStatusList) GetStatus() []TensorStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type OperatorDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InputParams            []*FormalParameter           `protobuf:"bytes,2,rep,name=input_params,json=inputParams,proto3" json:"input_params,omitempty"`
	OutputParams           []*FormalParameter           `protobuf:"bytes,3,rep,name=output_params,json=outputParams,proto3" json:"output_params,omitempty"`
	AttributeParams        []*FormalAttribute           `protobuf:"bytes,4,rep,name=attribute_params,json=attributeParams,proto3" json:"attribute_params,omitempty"`
	DefaultAttributeValues map[string]*AttributeValue   `protobuf:"bytes,5,rep,name=default_attribute_values,json=defaultAttributeValues,proto3" json:"default_attribute_values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Definition             string                       `protobuf:"bytes,6,opt,name=definition,proto3" json:"definition,omitempty"`
	ParamStatusConstraints map[string]*TensorStatusList `protobuf:"bytes,7,rep,name=param_status_constraints,json=paramStatusConstraints,proto3" json:"param_status_constraints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OperatorDef) Reset() {
	*x = OperatorDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorDef) ProtoMessage() {}

func (x *OperatorDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorDef.ProtoReflect.Descriptor instead.
func (*OperatorDef) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{9}
}

func (x *OperatorDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperatorDef) GetInputParams() []*FormalParameter {
	if x != nil {
		return x.InputParams
	}
	return nil
}

func (x *OperatorDef) GetOutputParams() []*FormalParameter {
	if x != nil {
		return x.OutputParams
	}
	return nil
}

func (x *OperatorDef) GetAttributeParams() []*FormalAttribute {
	if x != nil {
		return x.AttributeParams
	}
	return nil
}

func (x *OperatorDef) GetDefaultAttributeValues() map[string]*AttributeValue {
	if x != nil {
		return x.DefaultAttributeValues
	}
	return nil
}

func (x *OperatorDef) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *OperatorDef) GetParamStatusConstraints() map[string]*TensorStatusList {
	if x != nil {
		return x.ParamStatusConstraints
	}
	return nil
}

type PartyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PartyId) Reset() {
	*x = PartyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyId) ProtoMessage() {}

func (x *PartyId) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyId.ProtoReflect.Descriptor instead.
func (*PartyId) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{10}
}

func (x *PartyId) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TensorShape_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*TensorShape_Dimension_DimValue
	//	*TensorShape_Dimension_DimParam
	Value isTensorShape_Dimension_Value `protobuf_oneof:"value"`
}

func (x *TensorShape_Dimension) Reset() {
	*x = TensorShape_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TensorShape_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorShape_Dimension) ProtoMessage() {}

func (x *TensorShape_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorShape_Dimension.ProtoReflect.Descriptor instead.
func (*TensorShape_Dimension) Descriptor() ([]byte, []int) {
	return file_api_core_proto_rawDescGZIP(), []int{0, 0}
}

func (m *TensorShape_Dimension) GetValue() isTensorShape_Dimension_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TensorShape_Dimension) GetDimValue() int64 {
	if x, ok := x.GetValue().(*TensorShape_Dimension_DimValue); ok {
		return x.DimValue
	}
	return 0
}

func (x *TensorShape_Dimension) GetDimParam() string {
	if x, ok := x.GetValue().(*TensorShape_Dimension_DimParam); ok {
		return x.DimParam
	}
	return ""
}

type isTensorShape_Dimension_Value interface {
	isTensorShape_Dimension_Value()
}

type TensorShape_Dimension_DimValue struct {
	DimValue int64 `protobuf:"varint,1,opt,name=dim_value,json=dimValue,proto3,oneof"`
}

type TensorShape_Dimension_DimParam struct {
	DimParam string `protobuf:"bytes,2,opt,name=dim_param,json=dimParam,proto3,oneof"`
}

func (*TensorShape_Dimension_DimValue) isTensorShape_Dimension_Value() {}

func (*TensorShape_Dimension_DimParam) isTensorShape_Dimension_Value() {}

var File_api_core_proto protoreflect.FileDescriptor

var file_api_core_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x64, 0x69, 0x6d,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x1a, 0x52, 0x0a, 0x09, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x64,
	0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x41, 0x0a, 0x10, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xd5, 0x03, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0b, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x08, 0x42, 0x02, 0x10, 0x01, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x22, 0x3a, 0x0a, 0x0e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x01,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x01, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x22,
	0xed, 0x03, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x45, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x63, 0x71, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x20, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa4, 0x05, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x6a, 0x0a, 0x18, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x65, 0x66, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x18, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x1a, 0x62, 0x0a, 0x1b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x1b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1d, 0x0a, 0x07,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x2a, 0xac, 0x01, 0x0a, 0x11,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x07, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x0a, 0x2a, 0x37, 0x0a, 0x0d, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45,
	0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x02, 0x2a, 0x8d, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18,
	0x0a, 0x14, 0x54, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x45, 0x4e, 0x53,
	0x4f, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x49, 0x50, 0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x45,
	0x4e, 0x53, 0x4f, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x43, 0x10, 0x04, 0x2a, 0xab, 0x01, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24,
	0x0a, 0x20, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45,
	0x52, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x50, 0x41,
	0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x53,
	0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x4f,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x44, 0x49, 0x43, 0x10,
	0x03, 0x42, 0x25, 0x0a, 0x13, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x5a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x67, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x71, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_core_proto_rawDescOnce sync.Once
	file_api_core_proto_rawDescData = file_api_core_proto_rawDesc
)

func file_api_core_proto_rawDescGZIP() []byte {
	file_api_core_proto_rawDescOnce.Do(func() {
		file_api_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_core_proto_rawDescData)
	})
	return file_api_core_proto_rawDescData
}

var file_api_core_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_core_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_core_proto_goTypes = []interface{}{
	(PrimitiveDataType)(0),        // 0: scql.pb.PrimitiveDataType
	(TensorOptions)(0),            // 1: scql.pb.TensorOptions
	(TensorStatus)(0),             // 2: scql.pb.TensorStatus
	(FormalParameterOptions)(0),   // 3: scql.pb.FormalParameterOptions
	(*TensorShape)(nil),           // 4: scql.pb.TensorShape
	(*TensorAnnotation)(nil),      // 5: scql.pb.TensorAnnotation
	(*Tensor)(nil),                // 6: scql.pb.Tensor
	(*AttributeValue)(nil),        // 7: scql.pb.AttributeValue
	(*TensorList)(nil),            // 8: scql.pb.TensorList
	(*ExecNode)(nil),              // 9: scql.pb.ExecNode
	(*FormalAttribute)(nil),       // 10: scql.pb.FormalAttribute
	(*FormalParameter)(nil),       // 11: scql.pb.FormalParameter
	(*TensorStatusList)(nil),      // 12: scql.pb.TensorStatusList
	(*OperatorDef)(nil),           // 13: scql.pb.OperatorDef
	(*PartyId)(nil),               // 14: scql.pb.PartyId
	(*TensorShape_Dimension)(nil), // 15: scql.pb.TensorShape.Dimension
	nil,                           // 16: scql.pb.ExecNode.InputsEntry
	nil,                           // 17: scql.pb.ExecNode.OutputsEntry
	nil,                           // 18: scql.pb.ExecNode.AttributesEntry
	nil,                           // 19: scql.pb.OperatorDef.DefaultAttributeValuesEntry
	nil,                           // 20: scql.pb.OperatorDef.ParamStatusConstraintsEntry
}
var file_api_core_proto_depIdxs = []int32{
	15, // 0: scql.pb.TensorShape.dim:type_name -> scql.pb.TensorShape.Dimension
	2,  // 1: scql.pb.TensorAnnotation.status:type_name -> scql.pb.TensorStatus
	4,  // 2: scql.pb.Tensor.shape:type_name -> scql.pb.TensorShape
	0,  // 3: scql.pb.Tensor.elem_type:type_name -> scql.pb.PrimitiveDataType
	1,  // 4: scql.pb.Tensor.option:type_name -> scql.pb.TensorOptions
	5,  // 5: scql.pb.Tensor.annotation:type_name -> scql.pb.TensorAnnotation
	6,  // 6: scql.pb.AttributeValue.t:type_name -> scql.pb.Tensor
	6,  // 7: scql.pb.TensorList.tensors:type_name -> scql.pb.Tensor
	16, // 8: scql.pb.ExecNode.inputs:type_name -> scql.pb.ExecNode.InputsEntry
	17, // 9: scql.pb.ExecNode.outputs:type_name -> scql.pb.ExecNode.OutputsEntry
	18, // 10: scql.pb.ExecNode.attributes:type_name -> scql.pb.ExecNode.AttributesEntry
	3,  // 11: scql.pb.FormalParameter.option:type_name -> scql.pb.FormalParameterOptions
	4,  // 12: scql.pb.FormalParameter.param_shape:type_name -> scql.pb.TensorShape
	2,  // 13: scql.pb.TensorStatusList.status:type_name -> scql.pb.TensorStatus
	11, // 14: scql.pb.OperatorDef.input_params:type_name -> scql.pb.FormalParameter
	11, // 15: scql.pb.OperatorDef.output_params:type_name -> scql.pb.FormalParameter
	10, // 16: scql.pb.OperatorDef.attribute_params:type_name -> scql.pb.FormalAttribute
	19, // 17: scql.pb.OperatorDef.default_attribute_values:type_name -> scql.pb.OperatorDef.DefaultAttributeValuesEntry
	20, // 18: scql.pb.OperatorDef.param_status_constraints:type_name -> scql.pb.OperatorDef.ParamStatusConstraintsEntry
	8,  // 19: scql.pb.ExecNode.InputsEntry.value:type_name -> scql.pb.TensorList
	8,  // 20: scql.pb.ExecNode.OutputsEntry.value:type_name -> scql.pb.TensorList
	7,  // 21: scql.pb.ExecNode.AttributesEntry.value:type_name -> scql.pb.AttributeValue
	7,  // 22: scql.pb.OperatorDef.DefaultAttributeValuesEntry.value:type_name -> scql.pb.AttributeValue
	12, // 23: scql.pb.OperatorDef.ParamStatusConstraintsEntry.value:type_name -> scql.pb.TensorStatusList
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_api_core_proto_init() }
func file_api_core_proto_init() {
	if File_api_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorAnnotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormalAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormalParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorStatusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TensorShape_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_core_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AttributeValue_T)(nil),
	}
	file_api_core_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TensorShape_Dimension_DimValue)(nil),
		(*TensorShape_Dimension_DimParam)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_core_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_proto_goTypes,
		DependencyIndexes: file_api_core_proto_depIdxs,
		EnumInfos:         file_api_core_proto_enumTypes,
		MessageInfos:      file_api_core_proto_msgTypes,
	}.Build()
	File_api_core_proto = out.File
	file_api_core_proto_rawDesc = nil
	file_api_core_proto_goTypes = nil
	file_api_core_proto_depIdxs = nil
}
