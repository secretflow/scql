// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: api/engine.proto

package scql

import (
	spu "github.com/secretflow/scql/pkg/proto-gen/spu"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionParams *SessionStartParams `protobuf:"bytes,1,opt,name=session_params,json=sessionParams,proto3" json:"session_params,omitempty"`
}

func (x *StartSessionRequest) Reset() {
	*x = StartSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionRequest) ProtoMessage() {}

func (x *StartSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionRequest.ProtoReflect.Descriptor instead.
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{0}
}

func (x *StartSessionRequest) GetSessionParams() *SessionStartParams {
	if x != nil {
		return x.SessionParams
	}
	return nil
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type RunDagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes        []*ExecNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	SessionId    string      `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DagId        int32       `protobuf:"varint,3,opt,name=dag_id,json=dagId,proto3" json:"dag_id,omitempty"`
	CallbackHost string      `protobuf:"bytes,4,opt,name=callback_host,json=callbackHost,proto3" json:"callback_host,omitempty"`
	CallbackUri  string      `protobuf:"bytes,5,opt,name=callback_uri,json=callbackUri,proto3" json:"callback_uri,omitempty"`
}

func (x *RunDagRequest) Reset() {
	*x = RunDagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunDagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunDagRequest) ProtoMessage() {}

func (x *RunDagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunDagRequest.ProtoReflect.Descriptor instead.
func (*RunDagRequest) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{2}
}

func (x *RunDagRequest) GetNodes() []*ExecNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *RunDagRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RunDagRequest) GetDagId() int32 {
	if x != nil {
		return x.DagId
	}
	return 0
}

func (x *RunDagRequest) GetCallbackHost() string {
	if x != nil {
		return x.CallbackHost
	}
	return ""
}

func (x *RunDagRequest) GetCallbackUri() string {
	if x != nil {
		return x.CallbackUri
	}
	return ""
}

type StopSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{3}
}

func (x *StopSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StopSessionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SessionStartParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyCode     string                      `protobuf:"bytes,1,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	Parties       []*SessionStartParams_Party `protobuf:"bytes,2,rep,name=parties,proto3" json:"parties,omitempty"`
	SessionId     string                      `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SpuRuntimeCfg *spu.RuntimeConfig          `protobuf:"bytes,4,opt,name=spu_runtime_cfg,json=spuRuntimeCfg,proto3" json:"spu_runtime_cfg,omitempty"`
}

func (x *SessionStartParams) Reset() {
	*x = SessionStartParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStartParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStartParams) ProtoMessage() {}

func (x *SessionStartParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStartParams.ProtoReflect.Descriptor instead.
func (*SessionStartParams) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{4}
}

func (x *SessionStartParams) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *SessionStartParams) GetParties() []*SessionStartParams_Party {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *SessionStartParams) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionStartParams) GetSpuRuntimeCfg() *spu.RuntimeConfig {
	if x != nil {
		return x.SpuRuntimeCfg
	}
	return nil
}

type SubDAG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs                     []*SubDAG_Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	NeedCallBarrierAfterJobs bool          `protobuf:"varint,2,opt,name=need_call_barrier_after_jobs,json=needCallBarrierAfterJobs,proto3" json:"need_call_barrier_after_jobs,omitempty"`
	NeedSyncSymbolBeforeJobs bool          `protobuf:"varint,3,opt,name=need_sync_symbol_before_jobs,json=needSyncSymbolBeforeJobs,proto3" json:"need_sync_symbol_before_jobs,omitempty"`
}

func (x *SubDAG) Reset() {
	*x = SubDAG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubDAG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubDAG) ProtoMessage() {}

func (x *SubDAG) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubDAG.ProtoReflect.Descriptor instead.
func (*SubDAG) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{5}
}

func (x *SubDAG) GetJobs() []*SubDAG_Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *SubDAG) GetNeedCallBarrierAfterJobs() bool {
	if x != nil {
		return x.NeedCallBarrierAfterJobs
	}
	return false
}

func (x *SubDAG) GetNeedSyncSymbolBeforeJobs() bool {
	if x != nil {
		return x.NeedSyncSymbolBeforeJobs
	}
	return false
}

type SchedulingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerNum int32     `protobuf:"varint,1,opt,name=worker_num,json=workerNum,proto3" json:"worker_num,omitempty"`
	Subdags   []*SubDAG `protobuf:"bytes,2,rep,name=subdags,proto3" json:"subdags,omitempty"`
}

func (x *SchedulingPolicy) Reset() {
	*x = SchedulingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingPolicy) ProtoMessage() {}

func (x *SchedulingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingPolicy.ProtoReflect.Descriptor instead.
func (*SchedulingPolicy) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{6}
}

func (x *SchedulingPolicy) GetWorkerNum() int32 {
	if x != nil {
		return x.WorkerNum
	}
	return 0
}

func (x *SchedulingPolicy) GetSubdags() []*SubDAG {
	if x != nil {
		return x.Subdags
	}
	return nil
}

type RunExecutionPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionParams *SessionStartParams  `protobuf:"bytes,1,opt,name=session_params,json=sessionParams,proto3" json:"session_params,omitempty"`
	Nodes         map[string]*ExecNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Policy        *SchedulingPolicy    `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	Async         bool                 `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RunExecutionPlanRequest) Reset() {
	*x = RunExecutionPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunExecutionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutionPlanRequest) ProtoMessage() {}

func (x *RunExecutionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutionPlanRequest.ProtoReflect.Descriptor instead.
func (*RunExecutionPlanRequest) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{7}
}

func (x *RunExecutionPlanRequest) GetSessionParams() *SessionStartParams {
	if x != nil {
		return x.SessionParams
	}
	return nil
}

func (x *RunExecutionPlanRequest) GetNodes() map[string]*ExecNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *RunExecutionPlanRequest) GetPolicy() *SchedulingPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *RunExecutionPlanRequest) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

type RunExecutionPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OutColumns      []*Tensor `protobuf:"bytes,2,rep,name=out_columns,json=outColumns,proto3" json:"out_columns,omitempty"`
	SessionId       string    `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PartyCode       string    `protobuf:"bytes,4,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	NumRowsAffected int64     `protobuf:"varint,5,opt,name=num_rows_affected,json=numRowsAffected,proto3" json:"num_rows_affected,omitempty"`
}

func (x *RunExecutionPlanResponse) Reset() {
	*x = RunExecutionPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunExecutionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExecutionPlanResponse) ProtoMessage() {}

func (x *RunExecutionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExecutionPlanResponse.ProtoReflect.Descriptor instead.
func (*RunExecutionPlanResponse) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{8}
}

func (x *RunExecutionPlanResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RunExecutionPlanResponse) GetOutColumns() []*Tensor {
	if x != nil {
		return x.OutColumns
	}
	return nil
}

func (x *RunExecutionPlanResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RunExecutionPlanResponse) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *RunExecutionPlanResponse) GetNumRowsAffected() int64 {
	if x != nil {
		return x.NumRowsAffected
	}
	return 0
}

type SessionStartParams_Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Rank int32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *SessionStartParams_Party) Reset() {
	*x = SessionStartParams_Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStartParams_Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStartParams_Party) ProtoMessage() {}

func (x *SessionStartParams_Party) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStartParams_Party.ProtoReflect.Descriptor instead.
func (*SessionStartParams_Party) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SessionStartParams_Party) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SessionStartParams_Party) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SessionStartParams_Party) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SessionStartParams_Party) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type SubDAG_Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId int32    `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	NodeIds  []string `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *SubDAG_Job) Reset() {
	*x = SubDAG_Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubDAG_Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubDAG_Job) ProtoMessage() {}

func (x *SubDAG_Job) ProtoReflect() protoreflect.Message {
	mi := &file_api_engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubDAG_Job.ProtoReflect.Descriptor instead.
func (*SubDAG_Job) Descriptor() ([]byte, []int) {
	return file_api_engine_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SubDAG_Job) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *SubDAG_Job) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

var File_api_engine_proto protoreflect.FileDescriptor

var file_api_engine_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6c, 0x69, 0x62, 0x73, 0x70, 0x75,
	0x2f, 0x73, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x39, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63,
	0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x44, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x64, 0x61, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x22, 0x4b, 0x0a,
	0x12, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa4, 0x02, 0x0a, 0x12, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x3b, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0f,
	0x73, 0x70, 0x75, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x66, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x75, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x70, 0x75, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x66, 0x67, 0x1a, 0x57, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x22, 0xf0, 0x01, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x44, 0x41, 0x47, 0x12, 0x27, 0x0a, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x71,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x44, 0x41, 0x47, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6e, 0x65, 0x65,
	0x64, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6e, 0x65, 0x65,
	0x64, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x4a, 0x6f, 0x62, 0x73, 0x1a, 0x3d, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x64, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x44, 0x41, 0x47, 0x52, 0x07, 0x73, 0x75, 0x62, 0x64, 0x61,
	0x67, 0x73, 0x22, 0xb6, 0x02, 0x0a, 0x17, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x4b,
	0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf, 0x01, 0x0a, 0x18,
	0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x30, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x75,
	0x6d, 0x52, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x32, 0xb3, 0x02,
	0x0a, 0x11, 0x53, 0x43, 0x51, 0x4c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x52, 0x75,
	0x6e, 0x44, 0x61, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x75, 0x6e, 0x44, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x52, 0x75,
	0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x20,
	0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x50, 0x0a, 0x14, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x06, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x63, 0x71, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x13, 0x5a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x63, 0x71, 0x6c, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_engine_proto_rawDescOnce sync.Once
	file_api_engine_proto_rawDescData = file_api_engine_proto_rawDesc
)

func file_api_engine_proto_rawDescGZIP() []byte {
	file_api_engine_proto_rawDescOnce.Do(func() {
		file_api_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_engine_proto_rawDescData)
	})
	return file_api_engine_proto_rawDescData
}

var file_api_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_engine_proto_goTypes = []interface{}{
	(*StartSessionRequest)(nil),      // 0: scql.pb.StartSessionRequest
	(*StatusResponse)(nil),           // 1: scql.pb.StatusResponse
	(*RunDagRequest)(nil),            // 2: scql.pb.RunDagRequest
	(*StopSessionRequest)(nil),       // 3: scql.pb.StopSessionRequest
	(*SessionStartParams)(nil),       // 4: scql.pb.SessionStartParams
	(*SubDAG)(nil),                   // 5: scql.pb.SubDAG
	(*SchedulingPolicy)(nil),         // 6: scql.pb.SchedulingPolicy
	(*RunExecutionPlanRequest)(nil),  // 7: scql.pb.RunExecutionPlanRequest
	(*RunExecutionPlanResponse)(nil), // 8: scql.pb.RunExecutionPlanResponse
	(*SessionStartParams_Party)(nil), // 9: scql.pb.SessionStartParams.Party
	(*SubDAG_Job)(nil),               // 10: scql.pb.SubDAG.Job
	nil,                              // 11: scql.pb.RunExecutionPlanRequest.NodesEntry
	(*Status)(nil),                   // 12: scql.pb.Status
	(*ExecNode)(nil),                 // 13: scql.pb.ExecNode
	(*spu.RuntimeConfig)(nil),        // 14: spu.RuntimeConfig
	(*Tensor)(nil),                   // 15: scql.pb.Tensor
	(*ReportRequest)(nil),            // 16: scql.pb.ReportRequest
	(*emptypb.Empty)(nil),            // 17: google.protobuf.Empty
}
var file_api_engine_proto_depIdxs = []int32{
	4,  // 0: scql.pb.StartSessionRequest.session_params:type_name -> scql.pb.SessionStartParams
	12, // 1: scql.pb.StatusResponse.status:type_name -> scql.pb.Status
	13, // 2: scql.pb.RunDagRequest.nodes:type_name -> scql.pb.ExecNode
	9,  // 3: scql.pb.SessionStartParams.parties:type_name -> scql.pb.SessionStartParams.Party
	14, // 4: scql.pb.SessionStartParams.spu_runtime_cfg:type_name -> spu.RuntimeConfig
	10, // 5: scql.pb.SubDAG.jobs:type_name -> scql.pb.SubDAG.Job
	5,  // 6: scql.pb.SchedulingPolicy.subdags:type_name -> scql.pb.SubDAG
	4,  // 7: scql.pb.RunExecutionPlanRequest.session_params:type_name -> scql.pb.SessionStartParams
	11, // 8: scql.pb.RunExecutionPlanRequest.nodes:type_name -> scql.pb.RunExecutionPlanRequest.NodesEntry
	6,  // 9: scql.pb.RunExecutionPlanRequest.policy:type_name -> scql.pb.SchedulingPolicy
	12, // 10: scql.pb.RunExecutionPlanResponse.status:type_name -> scql.pb.Status
	15, // 11: scql.pb.RunExecutionPlanResponse.out_columns:type_name -> scql.pb.Tensor
	13, // 12: scql.pb.RunExecutionPlanRequest.NodesEntry.value:type_name -> scql.pb.ExecNode
	0,  // 13: scql.pb.SCQLEngineService.StartSession:input_type -> scql.pb.StartSessionRequest
	2,  // 14: scql.pb.SCQLEngineService.RunDag:input_type -> scql.pb.RunDagRequest
	3,  // 15: scql.pb.SCQLEngineService.StopSession:input_type -> scql.pb.StopSessionRequest
	7,  // 16: scql.pb.SCQLEngineService.RunExecutionPlan:input_type -> scql.pb.RunExecutionPlanRequest
	16, // 17: scql.pb.EngineResultCallback.Report:input_type -> scql.pb.ReportRequest
	1,  // 18: scql.pb.SCQLEngineService.StartSession:output_type -> scql.pb.StatusResponse
	1,  // 19: scql.pb.SCQLEngineService.RunDag:output_type -> scql.pb.StatusResponse
	1,  // 20: scql.pb.SCQLEngineService.StopSession:output_type -> scql.pb.StatusResponse
	8,  // 21: scql.pb.SCQLEngineService.RunExecutionPlan:output_type -> scql.pb.RunExecutionPlanResponse
	17, // 22: scql.pb.EngineResultCallback.Report:output_type -> google.protobuf.Empty
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_engine_proto_init() }
func file_api_engine_proto_init() {
	if File_api_engine_proto != nil {
		return
	}
	file_api_common_proto_init()
	file_api_core_proto_init()
	file_api_status_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunDagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStartParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubDAG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunExecutionPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunExecutionPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStartParams_Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubDAG_Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_engine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_engine_proto_goTypes,
		DependencyIndexes: file_api_engine_proto_depIdxs,
		MessageInfos:      file_api_engine_proto_msgTypes,
	}.Build()
	File_api_engine_proto = out.File
	file_api_engine_proto_rawDesc = nil
	file_api_engine_proto_goTypes = nil
	file_api_engine_proto_depIdxs = nil
}
