// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package audit.pb;

import "api/engine.proto";
import "api/ccl.proto";
import "pkg/audit/common.proto";
option go_package = "proto-gen/audit";

message AuditLog {
  AuditHeader header = 1;
  AuditBody body = 2;
}

message AuditBody {
  oneof body {
    UncategorizedEvent uncategorized = 1;
    RunSyncQueryEvent run_sync_query = 2;
    RunAsyncQueryEvent run_async_query = 3;
    AsyncCompleteEvent async_complete = 4;
    FetchResultEvent fetch_result = 5;
    SessionParameters session_params = 6;

    QueryPlanDetail plan_detail = 7;
    QueryDagDetail dag_detail = 8;
    scql.pb.SecurityConfig ccl_detail = 9;
  }
}

message RunSyncQueryEvent {
  string user_name = 1;
  string host_name = 2;
  string source_ip = 3;
  string query = 4;
  QueryType type = 5;
  // num_row intended for use with statements that return a result set, such
  // as SELECT
  int64 num_rows = 6;
  // affected_rows intended for use with statements that doesn't return a result
  // set, such as SELECT INTO
  int64 affected_rows = 7;
  int64 cost_time = 8;  // unit: ms
}

message RunAsyncQueryEvent {
  string user_name = 1;
  string host_name = 2;
  string source_ip = 3;
  string query = 4;
  QueryType type = 5;
  int64 cost_time = 6;  // unit: ms
}

enum QueryType {
  UNKNOWN = 0;
  DQL = 1;
  GRANT_PRIV = 2;
  REVOKE_PRIV = 3;
  SHOW_STMT = 4;
  CREATE_USER = 5;
  DROP_USER = 6;
  ALTER_USER = 7;
  CREATE_DATABASE = 8;
  DROP_DATABASE = 9;
  CREATE_TABLE = 10;
  DROP_TABLE = 11;
  CREATE_VIEW = 12;
  EXPLAIN_STMT = 13;
}

message QueryPlanDetail {
  string party_code = 1;
  string target_url = 2;
  repeated NodeInfo node_list = 3;
}

message QueryDagDetail {
  string party_code = 1;
  string target_url = 2;
  int32 dag_id = 3;
  repeated NodeInfo node_list = 4;
}

message SessionParameters {
  bool sync = 1;
  scql.pb.SessionStartParams parameters = 2;
}

message AsyncCompleteEvent {
  // num_row intended for use with statements that return a result set, such as
  // SELECT
  int64 num_rows = 1;
  // affected_rows intended for use with statements that doesn't return a result
  // set, such as SELECT INTO
  int64 affected_rows = 2;
}

message FetchResultEvent {
  string user_name = 1;
  string host_name = 2;
  string source_ip = 3;
  // num_row intended for use with statements that return a result set, such as
  // SELECT
  int64 num_rows = 4;
  // affected_rows intended for use with statements that doesn't return a result
  // set, such as SELECT INTO
  int64 affected_rows = 5;
}