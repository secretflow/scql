# For definitions of options, see: https://github.com/grpc-ecosystem/grpc-gateway/blob/main/protoc-gen-openapiv2/options/annotations.proto
openapiOptions:
  message:
    - message: scql.pb.QueryRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "query": "SELECT * FROM TA;"
          }
    - message: scql.pb.QueryResponse
      option:
        example: |
          {
            "status": {
              "code": 0
            },
            "cost_time_s": 0.010912044,
            "out_columns": [
                {
                    "name": "ID",
                    "shape": {
                        "dim": [
                            {
                                "dim_value": "2"
                            },
                            {
                                "dim_value": "1"
                            }
                        ]
                    },
                    "elem_type": "STRING",
                    "option": "VALUE",
                    "string_data": [
                      "alice",
                      "bob"
                    ]
                }
            ]
          }
    - message: scql.pb.SubmitResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "submit query job d946a6fc-a079-11ee-8b9a-0242ac130003 succeed"
            },
            "job_id": "d946a6fc-a079-11ee-8b9a-0242ac130003"
          }
    - message: scql.pb.FetchResultRequest
      option:
        example: |
          {
            "job_id": "your-job-id-from-submit"
          }
    - message: scql.pb.CreateProjectRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "name": "proj_name",
            "conf": {
              "spu_runtime_cfg": {
                "protocol": "SEMI2K",
                "field": "FM64"
              }
            }
          }
    - message: scql.pb.CreateProjectResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "create project succeed, id: proj_id"
            },
            "project_id": "proj_id"
          }
    - message: scql.pb.ListProjectsRequest
      option:
        example: |
          {
            "ids": ["proj_id"]
          }
    - message: scql.pb.ListProjectsResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "list projects succeed"
            },
            "projects": [
              {
                "project_id": "proj_id",
                "conf": {
                  "spu_runtime_cfg": {
                    "protocol": "SEMI2K",
                    "field": "FM64"
                  }
                },
                "creator": "alice",
                "members": [
                  "alice"
                ]
              }
            ]
          }
    - message: scql.pb.InviteMemberRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "invitee": "bob"
          }
    - message: scql.pb.InviteMemberResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "invite member bob succeed"
            }
          }
    - message: scql.pb.ListInvitationsRequest
      option:
        example: "{}"
    - message: scql.pb.ListInvitationsResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "list invitations succeed"
            },
            "invitations": [
              {
                "invitation_id": 1,
                "project": {
                  "project_id":"proj_id",
                  "conf": {
                    "spu_runtime_cfg": {
                      "protocol": "SEMI2K",
                      "field": "FM64"
                    }
                  }
                },
                "inviter": "alice",
                "invitee": "bob",
                "status": 0
              }
            ]
          }
    - message: scql.pb.ProcessInvitationRequest
      option:
        example: |
          {
             "invitation_id": 1
          }
    - message: scql.pb.ProcessInvitationResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "process invitation 1 succeed"
            }
          }
    - message: scql.pb.CreateTableRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "table_name": "ta",
            "ref_table": "physic.table_alice",
            "db_type": "mysql",
            "columns": [
              {
                "name": "ID",
                "dtype": "string"
              },
              {
                "name": "age",
                "dtype": "int"
              }
            ]
          }
    - message: scql.pb.CreateTableResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "create table for proj_id succeed"
            }
          }
    - message: scql.pb.ListTablesRequest
      option:
        example: |
          {
             "project_id": "proj_id"
          }
    - message: scql.pb.ListTablesResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "list tables succeed"
            },
            "tables": [
              {
                "table_name": "tb",
                "ref_table": "bob.user_stats",
                "db_type": "mysql",
                "table_owner": "bob",
                "columns": [
                  {
                    "name": "ID",
                    "dtype": "string"
                  },
                  {
                    "name": "age",
                    "dtype": "int"
                  }
                ]
              }
            ]
          }
    - message: scql.pb.DropTableRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "table_name": "ta"
          }
    - message: scql.pb.DropTableResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "drop table succeed"
            }
          }
    - message: scql.pb.GrantCCLRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "column_control_list": [
              {
                "col": {
                  "column_name": "ID",
                  "table_name": "ta"
                },
                "party_code": "alice",
                "constraint": "PLAINTEXT"
              }
            ]
          }
    - message: scql.pb.GrantCCLResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "grant ccl for proj_id succeed"
            }
          }
    - message: scql.pb.RevokeCCLRequest
      option:
        example: |
          {
            "project_id": "proj_id",
            "column_control_list": [
              {
                "col": {
                  "column_name": "ID",
                  "table_name": "ta"
                },
                "party_code": "alice",
                "constraint": "PLAINTEXT"
              }
            ]
          }
    - message: scql.pb.RevokeCCLResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "revoke ccls succeed"
            }
          }
    - message: scql.pb.ShowCCLRequest
      option:
        example: |
          {
            "project_id": "proj_id"
          }
    - message: scql.pb.ShowCCLResponse
      option:
        example: |
          {
            "status": {
              "code": 0,
              "message": "show ccl for proj_id succeed"
            },
            "column_control_list": [
              {
                "col": {
                  "column_name": "ID",
                  "table_name": "ta"
                },
                "party_code": "alice",
                "constraint": "PLAINTEXT"
              }
            ]
          }



