apiVersion: kuscia.secretflow/v1alpha1
kind: AppImage
metadata:
  name: scql
spec:
  configTemplates:
    brokerConf: |-
      intra_server:
       protocol: http
       host: 0.0.0.0
       port: {{.KUSCIA_PORT_INTRA_NUMBER}}
      inter_server:
       port: {{.KUSCIA_PORT_INTER_NUMBER}}
       protocol: http
       cert_file: "{{.SERVER_CERT_FILE}}"
       key_file: "{{.SERVER_PRIVATE_KEY_FILE}}"
      inter_timeout: 30s
      party_code: {{.KUSCIA_DOMAIN_ID}}
      private_key_data: {{.KUSCIA_DOMAIN_KEY_DATA}}
      intra_host: "scql-broker-intra.{{.KUSCIA_DOMAIN_ID}}.svc:{{.KUSCIA_PORT_INTRA_NUMBER}}"
      discovery:
        type: kuscia
        kuscia:
          endpoint: kusciaapi:8083
          tls_mode: {{.KUSCIA_API_PROTOCOL}}
          cert: {{.CLIENT_CERT_FILE}}
          key: {{.CLIENT_PRIVATE_KEY_FILE}}
          cacert: {{.TRUSTED_CA_FILE}}
          token: {{.KUSCIA_API_TOKEN}}
      engine:
        timeout: 120s
        protocol: http
        content_type: application/json
        scheduler: kuscia
        kuscia_scheduler:
          endpoint: kusciaapi:8083
          tls_mode: {{.KUSCIA_API_PROTOCOL}}
          cert: {{.CLIENT_CERT_FILE}}
          key: {{.CLIENT_PRIVATE_KEY_FILE}}
          cacert: {{.TRUSTED_CA_FILE}}
          token: {{.KUSCIA_API_TOKEN}}
          keep_job_alive_for_debug: false
      storage:
        type: sqlite
        conn_str: "/home/kuscia/var/storage/data/broker.db"
        max_idle_conns: 10
        max_open_conns: 100
        conn_max_idle_time: 2m
        conn_max_lifetime: 5m
    engineConf: |-
      --listen_port={{.KUSCIA_PORT_ENGINEPORT_NUMBER}}
      --enable_driver_authorization=false
      --datasource_router=embed
      #--embed_router_conf=xxx
      # NOTE: set --datasource_router to kusciadatamesh if use kuscia datamesh
      #--datasource_router=kusciadatamesh
      --kuscia_datamesh_endpoint=datamesh:8071
      --kuscia_datamesh_client_cert_path={{.CLIENT_CERT_FILE}}
      --kuscia_datamesh_client_key_path={{.CLIENT_PRIVATE_KEY_FILE}}
      --kuscia_datamesh_cacert_path={{.TRUSTED_CA_FILE}}
      # party authentication flags
      --enable_self_auth=false
      --enable_peer_auth=false
      # https flags
      --server_enable_ssl=false
      --server_ssl_certificate=/home/admin/engine/conf/cert.pem
      --server_ssl_private_key=/home/admin/engine/conf/key.pem
      # set peer_engine_enable_ssl_as_client to true when peer SCQLEngine has https enabled
      --peer_engine_enable_ssl_as_client=false
      # set false when SCQLBroker IntraServer not enable https
      --driver_enable_ssl_as_client=false
      --peer_engine_protocol=http:proto
      --peer_engine_connection_type=pooled
      --peer_engine_load_balancer=rr
  deployTemplates:
    - name: broker
      role: broker
      replicas: 1
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: kubernetes.io/hostname
        containers:
          - command:
              - /home/admin/bin/broker
              - -config=./configs/config.yml
            configVolumeMounts:
              - mountPath: /work/configs/config.yml
                subPath: brokerConf
            name: broker
            ports:
              - name: intra
                port: 8080
                protocol: HTTP
                scope: Domain
              - name: inter
                port: 8081
                protocol: HTTP
                scope: Cluster
            readinessProbe:
              httpGet:
                path: /health
                port: intra
            workingDir: /work
        restartPolicy: Always
    - name: engine
      role: engine
      replicas: 1
      spec:
        containers:
          - command:
              - /home/admin/bin/scqlengine
              - --flagfile=./conf/gflags.conf
            configVolumeMounts:
              - mountPath: /work/conf/gflags.conf
                subPath: engineConf
            name: engine
            resources:
              requests:
                cpu: 1
                memory: 2Gi
            ports:
              - name: engineport
                port: 8003
                protocol: HTTP
                scope: Cluster
            workingDir: /work
        restartPolicy: Never
  image:
    name: "secretflow/scql"
    tag: "latest"
